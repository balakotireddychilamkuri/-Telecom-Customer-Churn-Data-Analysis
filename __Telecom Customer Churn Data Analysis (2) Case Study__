{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c112cac1",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd,seaborn as sns,matplotlib.pyplot as plt,os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "467a9dec",
   "metadata": {},
   "outputs": [],
   "source": [
    "os.chdir(r'Downloads')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "id": "fa88dc12",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['.ipynb_checkpoints',\n",
       " '07 Customer Churn Case Study Data (1).xlsx',\n",
       " '07 Customer Churn Case Study Data.xlsx',\n",
       " '1.pdf',\n",
       " '19MH1A0520.pptx',\n",
       " '1_vyPyrPwMDSurbM_KY_TMgA.png',\n",
       " '2. (1).Telecom Customer Churn Data Analysis (2) Case Study__',\n",
       " '2023 Batch Relevel Register Students Deatails.xlsx',\n",
       " '20MH5A0507_AWS Certified Cloud Practitioner.pdf',\n",
       " 'Abey_Resume_Template__2_.pdf',\n",
       " 'Abey_Resume_Template__4_ (1) (1).pdf',\n",
       " 'Abey_Resume_Template__4_ (1).pdf',\n",
       " 'Abey_Resume_Template__4_.pdf',\n",
       " 'abstarct.docx',\n",
       " 'Aditya - CDK Global.xlsx',\n",
       " 'aditya paid.pdf',\n",
       " 'AES Algorithm.pptx',\n",
       " 'agriculture-7177221__340.jpg',\n",
       " \"Ajay's Resume (9).pdf\",\n",
       " 'Akash-WT.pdf',\n",
       " 'an.pdf',\n",
       " 'Anaconda3-2021.11-Windows-x86_64.exe',\n",
       " 'Applicant_List_for_Segue_-_Hiring_2023_Batch_at_Hexaware_Technologies_Limited on 15th March.xlsx.xlsx',\n",
       " 'archive (1).zip',\n",
       " 'archive (2).zip',\n",
       " 'archive.zip',\n",
       " 'BALA KOTIREDDY.RESUME.pdf',\n",
       " 'BankChurners.csv',\n",
       " 'beginner-DA-course-blank (1).xlsx',\n",
       " 'beginner-DA-course-blank.xlsx',\n",
       " 'beginner-DA-course.xlsx',\n",
       " \"Boyina's Resume (3).pdf\",\n",
       " 'car prediction (1).ipynb',\n",
       " 'car prediction (2).ipynb',\n",
       " 'car prediction (3).ipynb',\n",
       " 'car prediction (4).ipynb',\n",
       " 'car prediction ppt new.pptx',\n",
       " 'car prediction.ipynb',\n",
       " 'CAR PRICE PREDICTION',\n",
       " 'CAR PRICE PREDICTION (1).zip',\n",
       " 'CAR PRICE PREDICTION (2).zip',\n",
       " 'Car Price Prediction using Linear Regression (1) (1).docx',\n",
       " 'Car Price Prediction using Linear Regression (1) (2).docx',\n",
       " 'Car Price Prediction using Linear Regression (1) (3).docx',\n",
       " 'Car Price Prediction using Linear Regression (1).docx',\n",
       " 'CAR PRICE PREDICTION.zip',\n",
       " 'ch balakotireddy. resume.pdf',\n",
       " 'chilamkuri balakotireddy Data analyst.pdf',\n",
       " 'CHILAMKURI BALAKOTIREDDY.pdf',\n",
       " 'CHILAMKURI BALAKOTIREDDY.png',\n",
       " \"CHILAMKURI's Resume (1).pdf\",\n",
       " \"CHILAMKURI's Resume (2).pdf\",\n",
       " \"CHILAMKURI's Resume (3).pdf\",\n",
       " \"CHILAMKURI's Resume (4).pdf\",\n",
       " \"CHILAMKURI's Resume (5).pdf\",\n",
       " \"CHILAMKURI's Resume (9).pdf\",\n",
       " \"CHILAMKURI's Resume.pdf\",\n",
       " 'CHILAMKURI+BALAKOTIREDDY (1).pdf',\n",
       " 'CHILAMKURI+BALAKOTIREDDY.pdf',\n",
       " 'circular.pdf',\n",
       " 'City-Las-Vega-New-York-Hotel-Casino-Nevada-USA-HD-Wallpapers-for-mobile-phones-and-PC-38400x2400-840x525.jpg',\n",
       " 'CNS-UNIT-2.pdf',\n",
       " 'CNS-UNIT-3.pdf',\n",
       " 'code  for telitechn',\n",
       " 'Course_Certificate (1).pdf',\n",
       " 'Course_Certificate.pdf',\n",
       " 'csv_datafile.csv',\n",
       " 'CV_2022042222271966.pdf',\n",
       " 'CV_2022052100492324.pdf',\n",
       " 'DAA Mid-1 Answers.pdf',\n",
       " 'DAA Unit-1.pdf',\n",
       " 'Data Analysis Case Study Assessment (1)-Copy1.ipynb',\n",
       " 'Data Analysis Case Study Assessment (1).ipynb',\n",
       " 'Data Analysis Case Study Assessment (1).py',\n",
       " 'Data Analysis Case Study Assessment (1).zip',\n",
       " 'Data Analysis From Scratch With Python_ Beginner Guide using Python, Pandas, NumPy, Scikit-Learn, IPython, TensorFlow and Matplotlib ( PDFDrive ).pdf',\n",
       " 'Data Sets-20220427 (1).zip',\n",
       " 'datahealthreview.txt',\n",
       " 'DES Algorithm.pptx',\n",
       " 'desktop.ini',\n",
       " 'Divami Eligible list.xlsx',\n",
       " 'Downloads.rar',\n",
       " 'DP_WT_III_II_I_MID_QB.pdf',\n",
       " 'DP_WT_II_MID_QUESTIONS.pdf',\n",
       " 'ds1.pdf',\n",
       " 'DT20222990228_Application (1).pdf',\n",
       " 'DT20222990228_Application.pdf',\n",
       " 'E2200692.pdf',\n",
       " 'EAadhaar_0704170042692120220228123051_13032022201530.pdf',\n",
       " 'EAadhaar_0704170042692120220228123051_13032022202139.pdf',\n",
       " 'EAadhaar_0957220631575820190626115716_04032022132558.pdf',\n",
       " 'eli5-for-mercari.ipynb',\n",
       " 'ELI5_Long_Form_Question_Answering.pdf',\n",
       " 'Experiments - Microsoft Machine Learning Studio (classic).html',\n",
       " 'Experiments - Microsoft Machine Learning Studio (classic)_files',\n",
       " 'export.pdf',\n",
       " 'Files.zip',\n",
       " 'final project of hero vierd (1)......gh (1).pptx',\n",
       " 'final project of hero vierd (1)......gh.pptx',\n",
       " 'First_year_resume_template_for_CS.pdf',\n",
       " 'Flyzy Email Database.zip',\n",
       " 'Flyzy Task 1.pdf',\n",
       " 'Flyzy task 3.pdf',\n",
       " 'Free-Fresher-Resume-Sample.zip',\n",
       " 'GitHubDesktopSetup-x64.exe',\n",
       " 'GoToWebinar Opener.exe',\n",
       " 'Group-4.pptx',\n",
       " 'group3 final.ipynb',\n",
       " 'group3 final.pdf',\n",
       " 'hemanth.pdf',\n",
       " 'HR MOCK 2023 BATCH.xlsx',\n",
       " 'IBALauncher (1).exe',\n",
       " 'IBALauncher.exe',\n",
       " 'icalexport.ics',\n",
       " 'IG-10_ml_algorithms.webp',\n",
       " 'IMG_20220519_221843-removebg-preview.png',\n",
       " 'IMP -IMID(DAA).doc',\n",
       " 'JNTUK B.Tech 3-2 Sem (R19) RegularSupply Time Table, June 2022.pdf',\n",
       " 'Joining Forms.docx',\n",
       " 'k.pdf',\n",
       " 'koti resume.pdf',\n",
       " 'kotireddy..pdf',\n",
       " 'Kusuma Sriaruna.pdf',\n",
       " 'Kyndryl Absenties list.xlsx',\n",
       " 'leaked_records.csv.zip',\n",
       " 'Lecture 01 (1).ipynb',\n",
       " 'Lecture 01 Code PDF (1).pdf',\n",
       " 'Lecture 01 Code PDF.pdf',\n",
       " 'Lecture 01 Material-20220308.zip',\n",
       " 'Lecture 01 Material-20220411.zip',\n",
       " 'Lecture 01 Material-20220720.zip',\n",
       " 'Lecture 01 Session material-20220317.zip',\n",
       " 'Lecture 01 Session material-20220403.zip',\n",
       " 'Lecture 02 Material-20220308.zip',\n",
       " 'Lecture 03 Material-20220308.zip',\n",
       " 'Lecture 05 Material-20220308.zip',\n",
       " 'Lecture 07 Material-20220308.zip',\n",
       " 'link.pdf',\n",
       " 'LockDownBrowserOEMSetup.exe',\n",
       " 'Machine-Learning-Step-by-Step-Guide-To-Impleme_16396.zip',\n",
       " 'MEFA MID-1ANS.pdf',\n",
       " 'meghana resume.docx',\n",
       " 'MH_19784 (1).pdf',\n",
       " 'MH_19784.pdf',\n",
       " 'MID I .docx',\n",
       " 'Mid II Material.pdf',\n",
       " 'Module 02 Data Analysis with Python.pdf',\n",
       " 'monkeys-7212290__340.webp',\n",
       " 'mount-everest-hikers-ap-mo-20190502_hpMain_16x9_992.jpg',\n",
       " 'MTA-PYTHON.jpg',\n",
       " 'mysql-installer-community-8.0.30.0.msi',\n",
       " 'Naga Praveen (1).pdf',\n",
       " 'Naive bayes algorithm.ipynb',\n",
       " 'NAVEEN KUMAR KAJULURI (2).pdf',\n",
       " 'naveen updated resume 2.docx',\n",
       " \"Naveen's Resume.pdf\",\n",
       " 'o.pdf',\n",
       " 'phani car predection.html',\n",
       " 'Phase-2 Deliverables Code (2).ipynb',\n",
       " 'Phase-2 Deliverables Code Final Code (1).ipynb',\n",
       " 'Pocs assignment1 (1).pdf',\n",
       " 'Pocs assignment1.pdf',\n",
       " 'pract (1).html',\n",
       " 'pract.html',\n",
       " 'Project_Task_1.docx',\n",
       " 'Q Spider Adithya engineering registerted students list 2022.xlsx',\n",
       " 'qrcode_cc-west-blog-assets.s3.amazonaws.com.png',\n",
       " 'qrcode_login.com.png',\n",
       " 'qrcode_www.google.com.png',\n",
       " 'R1932053.pdf',\n",
       " 'Reddit_Data.csv.zip',\n",
       " 'reddy resum1 (1).pdf',\n",
       " 'reddy resum1.pdf',\n",
       " 'reddy.jpg',\n",
       " 'Ren Labs Shortlisted students details.xlsx',\n",
       " 'Republic-2021-k4jhd.mp4',\n",
       " 'res (1).pdf',\n",
       " 'res.pdf',\n",
       " 'resume app',\n",
       " 'resume app - Shortcut.lnk',\n",
       " 'Resume K.pdf',\n",
       " 'Resume Template  (1).docx',\n",
       " 'Resume Template  (2).docx',\n",
       " 'Resume Template  (3).docx',\n",
       " 'Resume Template  (4).docx',\n",
       " 'Resume Template  (5).docx',\n",
       " 'Resume Template .docx',\n",
       " 'river-7212351__340.webp',\n",
       " 'sai car.ipynb',\n",
       " 'Sales Data.xlsx',\n",
       " 'Session material-20220308.zip',\n",
       " 'Shabaash-Mithu-Telugu-jnh6m-2022.mp4',\n",
       " 'Skype-8.85.0.409.exe',\n",
       " 'Skype.html',\n",
       " 'Skype_files',\n",
       " 'Slide Zoom PowerPoint Template by One Skill.pptx',\n",
       " 'subbu casestudy m3.ipynb',\n",
       " 'Subhasis_Resume.pdf-3 (1).pdf',\n",
       " 'Subhasis_Resume.pdf-3.pdf',\n",
       " 'SWOT Analysis Assignment .pdf',\n",
       " 'SWOT Analysis Assignment.pdf',\n",
       " 'TeamsSetupx64_s_8DA2B295F016D77-7-0_c_w_.exe',\n",
       " 'TeamsSetupx64_s_8DA4BAECE414DA8-7-0_c_w_.exe',\n",
       " 'TeamsSetupx64_s_8DA4BAF30FD8A8E-7-0_c_w_.exe',\n",
       " 'TeamsSetupx64_s_8DA5842563F3214-7-0_c_w_.exe',\n",
       " 'telecom Company project.pptx',\n",
       " 'Telecom Customer Churn Data Analysis (1) Case Study__',\n",
       " 'Telegram Desktop',\n",
       " 'text_data_comma.txt',\n",
       " 'text_data_tab.txt',\n",
       " 'UG 3-2 R19 CSE Syllabus.pdf',\n",
       " 'UG_R19_CSE_CS & Syllabus.pdf',\n",
       " 'UG_R19_CSE_CS &amp; Syllabus.pdf',\n",
       " 'Untitled.ipynb',\n",
       " 'Untitled1.ipynb',\n",
       " 'Untitled2.ipynb',\n",
       " 'Untitled3.ipynb',\n",
       " 'Update Value Momentum Eligible list (1).xlsx',\n",
       " 'Update Value Momentum Eligible list.xlsx',\n",
       " 'Value Momentum Eligible List.xlsx',\n",
       " 'vlc-3.0.16-win32.exe',\n",
       " 'VSCodeUserSetup-x64-1.65.1.exe',\n",
       " 'watch (1).html',\n",
       " 'watch.html',\n",
       " 'webex (1).exe',\n",
       " 'Webex.exe',\n",
       " 'WhatsApp Image 2022-03-02 at 7.07.38 PM.jpeg',\n",
       " 'WhatsApp Image 2022-03-10 at 6.53.54 PM.jpeg',\n",
       " 'WhatsApp Image 2022-04-15 at 11.05.56 PM.jpeg',\n",
       " 'WhatsApp Image 2022-05-05 at 5.59.15 PM.jpeg',\n",
       " 'WhatsApp Image 2022-05-25 at 7.58.48 PM.jpeg',\n",
       " 'WhatsAppSetup.exe',\n",
       " 'yaswanth .redsum.pdf',\n",
       " 'zebra-serengeti-np-tanzania-hp-huber-canvas-print.jpg',\n",
       " 'Zoom_cm_fo42anktZ9vvrZo4_mU+rXpdQkiTMvpcvKwu0uhT5G-GBHSqmjGCiq@LSt8CGXeGssh8lur_ka3cd844c8982fa34_.exe',\n",
       " 'Zoom_cm_fzkuvy5ukbZ9vvrZo4_m8FGqY-p-GpeBsiaBypp-wNIKj1CM8GnW78AE@m42r0M6Loesf6uW8_ke330e41e9bd41a46_.exe',\n",
       " '[Dataset 2]Students_eval_miss.csv',\n",
       " '[iSongs.info] 11 - Undiporaadhey.mp3']"
      ]
     },
     "execution_count": 266,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "os.listdir()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9167c519",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF=pd.read_excel('07 Customer Churn Case Study Data (1).xlsx',sheet_name='Data')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b920fafc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>128</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.7</td>\n",
       "      <td>1</td>\n",
       "      <td>265.1</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>107</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.7</td>\n",
       "      <td>1</td>\n",
       "      <td>161.6</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>137</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>299.4</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.10</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>75</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>166.7</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "      <td>7.42</td>\n",
       "      <td>10.1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "0           128              1              1         2.7             1   \n",
       "1           107              1              1         3.7             1   \n",
       "2           137              1              0         0.0             0   \n",
       "3            84              0              0         0.0             2   \n",
       "4            75              0              0         0.0             3   \n",
       "\n",
       "   avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \n",
       "0          265.1        110      89.0        9.87       10.0           0  \n",
       "1          161.6        123      82.0        9.78       13.7           0  \n",
       "2          243.4        114      52.0        6.06       12.2           0  \n",
       "3          299.4         71      57.0        3.10        6.6           0  \n",
       "4          166.7        113      41.0        7.42       10.1           0  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "adef8866",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF['num_cs_calls'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e5c0b6cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set_theme()\n",
    "sns.histplot(data=DF,x='weeks_active',y='churn_flag');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "711775f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "churned=DF[DF.churn_flag==1]\n",
    "non_churned=DF[DF.churn_flag==0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "98d410d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3333.000000\n",
       "mean      179.775098\n",
       "std        54.467389\n",
       "min         0.000000\n",
       "1%         51.832000\n",
       "50%       179.400000\n",
       "99%       305.168000\n",
       "max       350.800000\n",
       "Name: avg_talk_time, dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.avg_talk_time.describe([0.01,0.99])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ff8115ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=DF,x='avg_talk_time');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "34533eeb",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "EOL while scanning string literal (Temp/ipykernel_1584/863310982.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"C:\\Users\\INDIA\\AppData\\Local\\Temp/ipykernel_1584/863310982.py\"\u001b[1;36m, line \u001b[1;32m2\u001b[0m\n\u001b[1;33m    DF['avg_talk_time_wo']=np.where(DF['avg_talk_time']>305,305,DF['avg_talk_tim\u001b[0m\n\u001b[1;37m                                                                                ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m EOL while scanning string literal\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "DF['avg_talk_time_wo']=np.where(DF['avg_talk_time']>305,305,DF['avg_talk_tim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c0da2c6d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "DF['avg_talk_time_wo']=np.where(DF['avg_talk_time']>305,305,DF['avg_talk_time'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fa829798",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3333.000000\n",
       "mean      179.603930\n",
       "std        54.032281\n",
       "min         0.000000\n",
       "25%       143.700000\n",
       "50%       179.400000\n",
       "75%       216.400000\n",
       "max       305.000000\n",
       "Name: avg_talk_time_wo, dtype: float64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.avg_talk_time_wo.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "5cf0ff5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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XtGFCxe0Zs0a/2u5ublhdz56W0e4nY+0tDRVVVUpJydHUVFRysjIUGZmpuLj44NyPvjJEQBgiO9IAwBDRBcADBFdADBEdAHAENEFAENEFwHV3Nz8P/2Tm7feekv5+fmS2p/01tfvdy8sLNT+/fslSUuXLlVFRUXfJwsYILoIqKamJv3zn/8M+HEqKirU8a8fV69erbFjxwb8mMCVILpfYz6fT6tWrdKMGTM0adIk3X///frggw905513dvpWyBkzZqisrEynTp1Sfn6+7r//fs2aNUuPPvqofv/731/yGAUFBTp//rymTJkir9erjRs3asaMGcrJyVF6erpef/31Xt/b1tamX/7yl1q8ePEln2n6/PPP6/PPP9evf/1r7du3z3+lfOTIEd1zzz1atmyZpk2bpilTpmjbtm2aP3++7r33Xi1atEg+n0+S9OGHHyovL09Tp07V9OnT9f77719yXaWlpcrLy/NvT5gwQcXFxZKk48ePKzU1VT6fT6WlpcrJyVF2drZmzZoVNg9/QgD164MiEVY+/PBDt3DhQuf1ep1zzq1fv97l5+e7xx9/3P3hD39wzjl3+PBhd9dddzmv1+see+wxV1RU5Jxz7sSJEy4lJcUVFxdf8hh1dXVu1KhRzjnnzpw5437+85+7U6dOOeec++ijj/xjb775pps/f75zzrkHH3zQbd682T388MNuxYoVzufzXXYt6enprqqqyv/+d99919XV1bnvfe97rrS01Dnn3LJly1x6erprbm5258+fdykpKW7v3r2usbHRZWRk+J/fe/z4cTd+/Hh39OjRXo/X0tLi7rzzTtfU1OTq6upcSkqKmzlzpnPOuddee80tX77cHT582I0dO9bV1tY655yrqKhwKSkprrm5+bLrwdWr378NGOEjKSlJsbGx+vOf/6y6ujrt2bNH1113nebNm6cVK1booYce0ptvvqnp06crMjJSZWVl2rRpk6T2R+H19duhr7vuOr300ksqKytTdXW1/vWvf+ncuXM97rt27VqdPXtW77333ld6ylN0dLTuvvtuSdLQoUOVlJSk66+/3r+GpqYmffzxx6qvr9eCBQv874uIiNDBgwc1ePDgHj93wIABGjt2rMrLy9XQ0KCZM2dqw4YNam5u1t/+9jfNmzdPu3fvVnJyshITEyVJY8aMUXx8vPbv36/k5OQrXhPCG7cXvsa2b9/u/+LVPffco1mzZkmSfvKTn6itrU1VVVV65513NH36dEmSx+Px3zeVpMjIvv32OX78uHJycnT06FH9+Mc/1qJFi3rdNzs7W7m5uSosLOzjqjqLjo7uFO3o6Ohu+3i9Xg0fPlxvv/22/78NGzYoNTX1kp997733aseOHSovL1dqaqp++tOfqrS0VP/+9781evTobo8JlNofGBNKP8YG9oju11h5ebnS09OVl5enH/3oRyotLZXX65XUfh935cqVGjFihG655RZJ7Q8O2bhxoySpoaFBpaWll70K9Xg88nq9cs5p//79io+P18MPP6zU1FT/fdOOY37ZyJEjtWjRItXW1uqNN9647FqioqKuOGajRo1STU2N/v73v0tq/xlZEyZMuOzDq++++25VVlbqwIEDGjlypFJSUvTCCy9o/PjxioqK0pgxY7Rr1y7V1dVJkv9ZrnfccccVzRNXB24vfI3l5uZq8eLFysrKUltbm1JSUrR161b5fD7l5OToueee03PPPeffv6CgQIWFhcrKylJcXJwGDx6sAQMGXPIYCQkJGjlypP8HAt50002aOHGiIiIiNHr0aMXHx6umpqbH93Y8KW3u3LlKTk7W0KFDez3Offfdp9/85jd66qmn+vzrEB8fr+LiYv9jPZ1zKioq0re//e1Lvi8mJkbDhw/XwIEDFRUVpXHjxmnp0qXKyMiQJN16661avny5HnnkEXm9Xg0YMEAvvfSSYmJi+jxHXD14yhj+ZyUlJfrhD3+opKQkXbx4UXl5eVq4cKHS0tKCPTUgbHCli//ZrbfeqpUrV8rn86m1tVUTJ05UWlqa8vLydPbs2R7fU1JS4v/C1Vfx9NNPa8+ePT2OFRQUBOQLU7t379YzzzzT49jPfvYzLVmypN+PiasfV7oAYIgvpAGAIaILAIaILgAYIroAYIjoAoAhogsAhv4PXAt4ZFG7d1kAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=DF,x='avg_talk_time_wo');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5e34c9eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF['avg_talk_time_wo']=np.where(DF['avg_talk_time_wo']<51,50,DF['avg_talk_time_wo'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "cfacede1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3333.000000\n",
       "mean      179.773387\n",
       "std        53.572803\n",
       "min        50.000000\n",
       "25%       143.700000\n",
       "50%       179.400000\n",
       "75%       216.400000\n",
       "max       305.000000\n",
       "Name: avg_talk_time_wo, dtype: float64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.avg_talk_time_wo.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "929e1fee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3333.0\n",
       "mean      180.0\n",
       "std        54.0\n",
       "min        50.0\n",
       "1%         52.0\n",
       "50%       179.0\n",
       "99%       305.0\n",
       "max       305.0\n",
       "Name: avg_talk_time_wo, dtype: float64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.avg_talk_time_wo.describe([0.01,0.99]).round()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c20098f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3333.000000\n",
       "mean      101.064806\n",
       "std        39.822106\n",
       "min         1.000000\n",
       "1%         12.320000\n",
       "50%       101.000000\n",
       "99%       195.000000\n",
       "max       243.000000\n",
       "Name: weeks_active, dtype: float64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.weeks_active.describe([0.01,0.99])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "59230fba",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF['weeks_active_wo']=np.where(DF['weeks_active']>195,200,DF['weeks_active'])\n",
    "DF['weeks_active_wo']=np.where(DF['weeks_active_wo']<12,10,DF['weeks_active_wo'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "413dde19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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EsfP/vjjDyc1NdXZv3+/U1FR4bhcLmfbtm3+Po1frFu3zrn//vudqqoq59ixY87w4cOd5cuXO4MGDXJ2794d7OE1yu12O71793aqq6s9r1VWVjopKSlOcXGxU11d7WRlZTmrVq0K4iib9vPPPztpaWnO3r17Q3a+v//+e2fQoEHONddc45SUlDQ5xwMHDnS+++47x3EcJycnx8nLywuZcf/6669OWlqac/jwYcftdjsTJ0505s2b5ziO44wcOdL59ttvgzbWE3mP23GcRq+NUJrvU+X3xwvr16/XLbfcooSEBMXGxurOO+/UF1984e/T+EViYqKeeeYZtW7dWq1atVKXLl1UWlqq0tJSPfvss3K5XHr99dfldruDPdR6fv31V0lSVlaW7rrrLi1YsEBbtmxR586dlZSUpOjoaLlcrpCdd0l6/vnnNX78eLVp0yZk53vRokV67rnn1L59e0lqdI537dqlo0eP6oYbbpAk3XPPPUGde+9xt27dWs8995zatm2riIgIXX755SotLZUk/fDDD5ozZ45cLpemTp2qqqqqkBl3ZWWlz2sj1Ob7VPk9un/++acSExM92+3bt9fu3bv9fRq/6Natm+cLt2PHDi1dulS33XabbrnlFk2fPl2LFi3Sxo0b9dFHHwV3oF4OHTqknj17avbs2Xr//fe1cOFClZaWhs28r1+/XkePHtWAAQNUVlYWsvP94osvqkePHp7txq5t79cTExODOvfe4+7YsaN69eolSdq3b5/y8vLUr18/VVRU6KqrrtJTTz2lgoICHTp0SG+++Wawht1g3I1dG6E236fK79F1u92KiPjrrc0cx6m3HYq2bdumrKwsTZw4UZdddplmz56t9u3bq02bNsrMzNTq1auDPcR6kpOTNWPGDJ199tk699xzNXToUL3++uthM+8LFy7UI488IklKSkoK+fmu09i1HS7X/O7du/XQQw9pyJAhuvnmmxUXF6d33nlHXbp0UXR0tLKyskJq7hu7NsJlvhvj9+heeOGF2rNnj2d7z549nv9cCEWbNm3Sww8/rAkTJig9PV1bt27VsmXLPB93HCfkHtBv3LhRhYWFnm3HcdSxY8ewmPdjx47pm2++Ud++fSUpLOa7TmPXtvfrZWVlITf327dv17Bhw5Senq7Ro0dLkkpLS+v9V0WozX1j10Y4zHdT/B7dW2+9VYWFhdq3b58qKyu1fPly9enTx9+n8Yvff/9do0eP1syZMzVw4EBJx7+w06dP18GDB1VdXa38/PyQ+T/pdQ4fPqwZM2aoqqpK5eXlKigo0JNPPqnffvtNRUVFqq2t1ZIlS0Jy3rdu3apLLrlEsbGxksJjvutcf/31Pue4Y8eOOuuss7Rp0yZJ0ieffBJSc19eXq4RI0Zo3LhxysrK8rweExOjV155RSUlJXIcR3l5eSE1941dG6E+383x+7e1Cy64QOPHj9fw4cNVXV2toUOH6rrrrvP3afzi3XffVVVVlXJzcz2vDRs2TNnZ2XrggQdUU1OjO+64Q4MGDQriKBtKTU3V5s2bNXjwYLndbmVkZCg5OVm5ubkaO3asqqqqlJKSov79+wd7qA2UlJTowgsv9GxfeeWVIT/fdc4666xG53jmzJmaPHmyysvLdc0112j48OFBHu1fPvroI5WVlWnevHmaN2+eJKlv374aN26cpk6dqlGjRqm6ulo33nij57FPKGjq2gjl+W4OfzkCAAzxG2kAYIjoAoAhogsAhoguABgiugBgiOjibyUzM1NffPGFdu7cqeTk5GAPB39DRBcADIXO7/yhRXG73Zo+fbo2b96siooKOY6jKVOm6PHHH9eyZcs8b1hy7733asyYMbr22muVk5Oj4uJiJSQkKDExUd26ddPYsWObPM+cOXNUUFCg6Ohode7cWbm5uYqKitLzzz+voqIiHThwQHFxcZo5c6Yuu+wyn8fYvn27Jk2apGPHjslxHA0dOjSk3wMa4Y07XQTE5s2b9eeffyo/P1+ff/650tPT9d577yktLU2ffvqppOOxKysr02233aYXXnhBXbt21dKlS/Xaa6/p22+/bfYcK1eu1OLFi5Wfn68lS5bo4osv1oIFC7RmzRq1a9dO+fn5WrZsmbp37668vLxGj/Puu++qb9++Wrx4sebOnauNGzeGzNtLouXhThcBkZycrPj4eC1cuFAlJSX6+uuvFRcXp0cffVRTpkzRiBEj9PHHH2vIkCGKjIzU6tWrVVBQIOn4WyaezK8wFxYWqn///oqPj5ck5eTkeD6WlJSk+fPnq6ioSBs2bGjy+W1aWpqefvppbdmyRT179tTkyZMVGcn9CAKDKwsBsWrVKo0cOVKS1K9fPz3wwAOSpB49eqimpkZbtmzRkiVLNGTIEElSdHS0TvyN9JOJXlRUVL239Dt06JB27typDz74QJMmTVJMTIxcLpcGDRqkpn7bPTU1VcuWLdOAAQP0448/yuVy6Y8//jitzxtoDtFFQKxbt06pqanKyMhQ9+7dtWLFCtXW1ko6/hx32rRpuuKKK3TRRRdJOv736ereZnD//v1asWJFs++Reuutt+rLL79UeXm5JOmNN97Q+++/r7Vr1yo9PV333nuvLr30Un311Veec/syYcIEff755xo4cKDnLywUFxf7YxqABni8gIAYNmyYJkyYIJfLpZqaGvXq1UvLly+X2+3W4MGD9eqrr+rVV1/17J+Tk6PJkyfL5XIpISFBHTp0UExMTJPnSElJ0S+//OK5i+7ataumTZumn376Sf/85z89Eb/hhhv0888/N3qcJ554QpMmTVJ+fr6ioqJ0++2366abbvLDLAAN8S5jCAl5eXm6+uqrlZycrGPHjikjI0Njx45VSkpKsIcG+BV3uggJdXepbrdb1dXV6t+/v1JSUpSRkaGKigqf/yYvL09t27Y1HilwZrjTBQBD/I80ADBEdAHAENEFAENEFwAMEV0AMER0AcDQ/wPizzQfR1onJgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=DF,x='avg_calls');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d92bb698",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3333.000000\n",
       "mean      100.435644\n",
       "std        20.069084\n",
       "min         0.000000\n",
       "1%         54.000000\n",
       "50%       101.000000\n",
       "99%       146.000000\n",
       "max       165.000000\n",
       "Name: avg_calls, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.avg_calls.describe([0.01,0.99])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "35e17945",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF['avg_calls_wo']=np.where(DF['avg_calls']<54,50,DF['avg_calls'])\n",
    "DF['avg_calls_wo']=np.where(DF['avg_calls_wo']>146,150,DF['avg_calls_wo'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "85967abb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=DF,x='avg_calls_wo');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "4739182b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3333.000000\n",
       "mean       56.305161\n",
       "std        16.426032\n",
       "min        14.000000\n",
       "1%         26.000000\n",
       "50%        53.500000\n",
       "95%        87.800000\n",
       "96%        90.072000\n",
       "97%        91.904000\n",
       "98%        93.400000\n",
       "99%        98.280000\n",
       "max       111.300000\n",
       "Name: mth_bill, dtype: float64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.mth_bill.describe([0.01,0.99,0.95,0.96,0.97,0.98])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "2c67a5d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=DF,x='mth_bill');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c1c6b08c",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF['mth_bill_wo']=np.where(DF['mth_bill']>98,100,DF['mth_bill'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "64b573dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=DF,x='mth_bill_wo');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "1f18c652",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <th>mth_bill_wo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>128</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.70</td>\n",
       "      <td>1</td>\n",
       "      <td>265.1</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>265.1</td>\n",
       "      <td>128</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>107</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>1</td>\n",
       "      <td>161.6</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>161.6</td>\n",
       "      <td>107</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>137</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>137</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>299.4</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.10</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0</td>\n",
       "      <td>299.4</td>\n",
       "      <td>84</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>75</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3</td>\n",
       "      <td>166.7</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "      <td>7.42</td>\n",
       "      <td>10.1</td>\n",
       "      <td>0</td>\n",
       "      <td>166.7</td>\n",
       "      <td>75</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3328</th>\n",
       "      <td>192</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.67</td>\n",
       "      <td>2</td>\n",
       "      <td>156.2</td>\n",
       "      <td>77</td>\n",
       "      <td>71.7</td>\n",
       "      <td>10.78</td>\n",
       "      <td>9.9</td>\n",
       "      <td>0</td>\n",
       "      <td>156.2</td>\n",
       "      <td>192</td>\n",
       "      <td>77</td>\n",
       "      <td>71.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3329</th>\n",
       "      <td>68</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.34</td>\n",
       "      <td>3</td>\n",
       "      <td>231.1</td>\n",
       "      <td>57</td>\n",
       "      <td>56.4</td>\n",
       "      <td>7.67</td>\n",
       "      <td>9.6</td>\n",
       "      <td>0</td>\n",
       "      <td>231.1</td>\n",
       "      <td>68</td>\n",
       "      <td>57</td>\n",
       "      <td>56.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3330</th>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>180.8</td>\n",
       "      <td>109</td>\n",
       "      <td>56.0</td>\n",
       "      <td>14.44</td>\n",
       "      <td>14.1</td>\n",
       "      <td>0</td>\n",
       "      <td>180.8</td>\n",
       "      <td>28</td>\n",
       "      <td>109</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3331</th>\n",
       "      <td>184</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>213.8</td>\n",
       "      <td>105</td>\n",
       "      <td>50.0</td>\n",
       "      <td>7.98</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0</td>\n",
       "      <td>213.8</td>\n",
       "      <td>184</td>\n",
       "      <td>105</td>\n",
       "      <td>50.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3332</th>\n",
       "      <td>74</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>0</td>\n",
       "      <td>234.4</td>\n",
       "      <td>113</td>\n",
       "      <td>100.0</td>\n",
       "      <td>13.30</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>234.4</td>\n",
       "      <td>74</td>\n",
       "      <td>113</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3333 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "0              128              1              1        2.70             1   \n",
       "1              107              1              1        3.70             1   \n",
       "2              137              1              0        0.00             0   \n",
       "3               84              0              0        0.00             2   \n",
       "4               75              0              0        0.00             3   \n",
       "...            ...            ...            ...         ...           ...   \n",
       "3328           192              1              1        2.67             2   \n",
       "3329            68              1              0        0.34             3   \n",
       "3330            28              1              0        0.00             2   \n",
       "3331           184              0              0        0.00             2   \n",
       "3332            74              1              1        3.70             0   \n",
       "\n",
       "      avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \\\n",
       "0             265.1        110      89.0        9.87       10.0           0   \n",
       "1             161.6        123      82.0        9.78       13.7           0   \n",
       "2             243.4        114      52.0        6.06       12.2           0   \n",
       "3             299.4         71      57.0        3.10        6.6           0   \n",
       "4             166.7        113      41.0        7.42       10.1           0   \n",
       "...             ...        ...       ...         ...        ...         ...   \n",
       "3328          156.2         77      71.7       10.78        9.9           0   \n",
       "3329          231.1         57      56.4        7.67        9.6           0   \n",
       "3330          180.8        109      56.0       14.44       14.1           0   \n",
       "3331          213.8        105      50.0        7.98        5.0           0   \n",
       "3332          234.4        113     100.0       13.30       13.7           0   \n",
       "\n",
       "      avg_talk_time_wo  weeks_active_wo  avg_calls_wo  mth_bill_wo  \n",
       "0                265.1              128           110         89.0  \n",
       "1                161.6              107           123         82.0  \n",
       "2                243.4              137           114         52.0  \n",
       "3                299.4               84            71         57.0  \n",
       "4                166.7               75           113         41.0  \n",
       "...                ...              ...           ...          ...  \n",
       "3328             156.2              192            77         71.7  \n",
       "3329             231.1               68            57         56.4  \n",
       "3330             180.8               28           109         56.0  \n",
       "3331             213.8              184           105         50.0  \n",
       "3332             234.4               74           113        100.0  \n",
       "\n",
       "[3333 rows x 15 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d970e9d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(data=DF,x='weeks_active_wo');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d43ba074",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <th>mth_bill_wo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>101.064806</td>\n",
       "      <td>0.903090</td>\n",
       "      <td>0.276628</td>\n",
       "      <td>0.816475</td>\n",
       "      <td>1.562856</td>\n",
       "      <td>179.775098</td>\n",
       "      <td>100.435644</td>\n",
       "      <td>56.305161</td>\n",
       "      <td>10.051488</td>\n",
       "      <td>10.237294</td>\n",
       "      <td>0.144914</td>\n",
       "      <td>179.773387</td>\n",
       "      <td>101.009001</td>\n",
       "      <td>100.483948</td>\n",
       "      <td>56.267057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>39.822106</td>\n",
       "      <td>0.295879</td>\n",
       "      <td>0.447398</td>\n",
       "      <td>1.272668</td>\n",
       "      <td>1.315491</td>\n",
       "      <td>54.467389</td>\n",
       "      <td>20.069084</td>\n",
       "      <td>16.426032</td>\n",
       "      <td>2.535712</td>\n",
       "      <td>2.791840</td>\n",
       "      <td>0.352067</td>\n",
       "      <td>53.572803</td>\n",
       "      <td>39.447527</td>\n",
       "      <td>19.812403</td>\n",
       "      <td>16.316723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>14.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1%</th>\n",
       "      <td>12.320000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>51.832000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>3.979600</td>\n",
       "      <td>3.332000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>51.832000</td>\n",
       "      <td>12.320000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>26.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5%</th>\n",
       "      <td>35.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>89.920000</td>\n",
       "      <td>67.000000</td>\n",
       "      <td>33.260000</td>\n",
       "      <td>5.940000</td>\n",
       "      <td>5.700000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>89.920000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>67.000000</td>\n",
       "      <td>33.260000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>101.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>179.400000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>53.500000</td>\n",
       "      <td>10.070000</td>\n",
       "      <td>10.300000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>179.400000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>53.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95%</th>\n",
       "      <td>167.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.460000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>270.740000</td>\n",
       "      <td>133.000000</td>\n",
       "      <td>87.800000</td>\n",
       "      <td>14.220000</td>\n",
       "      <td>14.700000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>270.740000</td>\n",
       "      <td>167.000000</td>\n",
       "      <td>133.000000</td>\n",
       "      <td>87.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99%</th>\n",
       "      <td>195.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.100000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>305.168000</td>\n",
       "      <td>146.000000</td>\n",
       "      <td>98.280000</td>\n",
       "      <td>15.946800</td>\n",
       "      <td>16.668000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>305.000000</td>\n",
       "      <td>195.000000</td>\n",
       "      <td>146.000000</td>\n",
       "      <td>99.232000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>243.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.400000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>350.800000</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>111.300000</td>\n",
       "      <td>18.190000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>305.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>150.000000</td>\n",
       "      <td>100.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       weeks_active  conrenew_flag  dataplan_flag   data_usage  num_cs_calls  \\\n",
       "count   3333.000000    3333.000000    3333.000000  3333.000000   3333.000000   \n",
       "mean     101.064806       0.903090       0.276628     0.816475      1.562856   \n",
       "std       39.822106       0.295879       0.447398     1.272668      1.315491   \n",
       "min        1.000000       0.000000       0.000000     0.000000      0.000000   \n",
       "1%        12.320000       0.000000       0.000000     0.000000      0.000000   \n",
       "5%        35.000000       0.000000       0.000000     0.000000      0.000000   \n",
       "50%      101.000000       1.000000       0.000000     0.000000      1.000000   \n",
       "95%      167.000000       1.000000       1.000000     3.460000      4.000000   \n",
       "99%      195.000000       1.000000       1.000000     4.100000      6.000000   \n",
       "max      243.000000       1.000000       1.000000     5.400000      9.000000   \n",
       "\n",
       "       avg_talk_time    avg_calls     mth_bill   overagefee    roam_mins  \\\n",
       "count    3333.000000  3333.000000  3333.000000  3333.000000  3333.000000   \n",
       "mean      179.775098   100.435644    56.305161    10.051488    10.237294   \n",
       "std        54.467389    20.069084    16.426032     2.535712     2.791840   \n",
       "min         0.000000     0.000000    14.000000     0.000000     0.000000   \n",
       "1%         51.832000    54.000000    26.000000     3.979600     3.332000   \n",
       "5%         89.920000    67.000000    33.260000     5.940000     5.700000   \n",
       "50%       179.400000   101.000000    53.500000    10.070000    10.300000   \n",
       "95%       270.740000   133.000000    87.800000    14.220000    14.700000   \n",
       "99%       305.168000   146.000000    98.280000    15.946800    16.668000   \n",
       "max       350.800000   165.000000   111.300000    18.190000    20.000000   \n",
       "\n",
       "        churn_flag  avg_talk_time_wo  weeks_active_wo  avg_calls_wo  \\\n",
       "count  3333.000000       3333.000000      3333.000000   3333.000000   \n",
       "mean      0.144914        179.773387       101.009001    100.483948   \n",
       "std       0.352067         53.572803        39.447527     19.812403   \n",
       "min       0.000000         50.000000        10.000000     50.000000   \n",
       "1%        0.000000         51.832000        12.320000     54.000000   \n",
       "5%        0.000000         89.920000        35.000000     67.000000   \n",
       "50%       0.000000        179.400000       101.000000    101.000000   \n",
       "95%       1.000000        270.740000       167.000000    133.000000   \n",
       "99%       1.000000        305.000000       195.000000    146.000000   \n",
       "max       1.000000        305.000000       200.000000    150.000000   \n",
       "\n",
       "       mth_bill_wo  \n",
       "count  3333.000000  \n",
       "mean     56.267057  \n",
       "std      16.316723  \n",
       "min      14.000000  \n",
       "1%       26.000000  \n",
       "5%       33.260000  \n",
       "50%      53.500000  \n",
       "95%      87.800000  \n",
       "99%      99.232000  \n",
       "max     100.000000  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.describe([0.01,0.99,0.05,0.95])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "1c7216e2",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "positional argument follows keyword argument (Temp/ipykernel_1584/3281875523.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"C:\\Users\\INDIA\\AppData\\Local\\Temp/ipykernel_1584/3281875523.py\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    DF.drop(['weeks_active','avg_talk_time','avg_calls','mth_bill'],axis=1,inpla\u001b[0m\n\u001b[1;37m                                                                                ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m positional argument follows keyword argument\n"
     ]
    }
   ],
   "source": [
    "DF.drop(['weeks_active','avg_talk_time','avg_calls','mth_bill'],axis=1,inpla"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "926bb7e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF.drop(['weeks_active','avg_talk_time','avg_calls','mth_bill'],axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c28f64a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>144.0</td>\n",
       "      <td>179.0</td>\n",
       "      <td>216.0</td>\n",
       "      <td>305.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>114.0</td>\n",
       "      <td>150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count   mean   std   min    25%    50%    75%    max\n",
       "conrenew_flag     3333.0    1.0   0.0   0.0    1.0    1.0    1.0    1.0\n",
       "dataplan_flag     3333.0    0.0   0.0   0.0    0.0    0.0    1.0    1.0\n",
       "data_usage        3333.0    1.0   1.0   0.0    0.0    0.0    2.0    5.0\n",
       "num_cs_calls      3333.0    2.0   1.0   0.0    1.0    1.0    2.0    9.0\n",
       "overagefee        3333.0   10.0   3.0   0.0    8.0   10.0   12.0   18.0\n",
       "roam_mins         3333.0   10.0   3.0   0.0    8.0   10.0   12.0   20.0\n",
       "churn_flag        3333.0    0.0   0.0   0.0    0.0    0.0    0.0    1.0\n",
       "avg_talk_time_wo  3333.0  180.0  54.0  50.0  144.0  179.0  216.0  305.0\n",
       "weeks_active_wo   3333.0  101.0  39.0  10.0   74.0  101.0  127.0  200.0\n",
       "avg_calls_wo      3333.0  100.0  20.0  50.0   87.0  101.0  114.0  150.0\n",
       "mth_bill_wo       3333.0   56.0  16.0  14.0   45.0   54.0   66.0  100.0"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.describe().T.round()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "4c7be1b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=DF,x='avg_talk_time_wo');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4507f51a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <th>mth_bill_wo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.70</td>\n",
       "      <td>1</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>265.1</td>\n",
       "      <td>128</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>1</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>161.6</td>\n",
       "      <td>107</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>137</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>3.10</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0</td>\n",
       "      <td>299.4</td>\n",
       "      <td>84</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3</td>\n",
       "      <td>7.42</td>\n",
       "      <td>10.1</td>\n",
       "      <td>0</td>\n",
       "      <td>166.7</td>\n",
       "      <td>75</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3328</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.67</td>\n",
       "      <td>2</td>\n",
       "      <td>10.78</td>\n",
       "      <td>9.9</td>\n",
       "      <td>0</td>\n",
       "      <td>156.2</td>\n",
       "      <td>192</td>\n",
       "      <td>77</td>\n",
       "      <td>71.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3329</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.34</td>\n",
       "      <td>3</td>\n",
       "      <td>7.67</td>\n",
       "      <td>9.6</td>\n",
       "      <td>0</td>\n",
       "      <td>231.1</td>\n",
       "      <td>68</td>\n",
       "      <td>57</td>\n",
       "      <td>56.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3330</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>14.44</td>\n",
       "      <td>14.1</td>\n",
       "      <td>0</td>\n",
       "      <td>180.8</td>\n",
       "      <td>28</td>\n",
       "      <td>109</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3331</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>7.98</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0</td>\n",
       "      <td>213.8</td>\n",
       "      <td>184</td>\n",
       "      <td>105</td>\n",
       "      <td>50.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3332</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>0</td>\n",
       "      <td>13.30</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>234.4</td>\n",
       "      <td>74</td>\n",
       "      <td>113</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2850 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      conrenew_flag  dataplan_flag  data_usage  num_cs_calls  overagefee  \\\n",
       "0                 1              1        2.70             1        9.87   \n",
       "1                 1              1        3.70             1        9.78   \n",
       "2                 1              0        0.00             0        6.06   \n",
       "3                 0              0        0.00             2        3.10   \n",
       "4                 0              0        0.00             3        7.42   \n",
       "...             ...            ...         ...           ...         ...   \n",
       "3328              1              1        2.67             2       10.78   \n",
       "3329              1              0        0.34             3        7.67   \n",
       "3330              1              0        0.00             2       14.44   \n",
       "3331              0              0        0.00             2        7.98   \n",
       "3332              1              1        3.70             0       13.30   \n",
       "\n",
       "      roam_mins  churn_flag  avg_talk_time_wo  weeks_active_wo  avg_calls_wo  \\\n",
       "0          10.0           0             265.1              128           110   \n",
       "1          13.7           0             161.6              107           123   \n",
       "2          12.2           0             243.4              137           114   \n",
       "3           6.6           0             299.4               84            71   \n",
       "4          10.1           0             166.7               75           113   \n",
       "...         ...         ...               ...              ...           ...   \n",
       "3328        9.9           0             156.2              192            77   \n",
       "3329        9.6           0             231.1               68            57   \n",
       "3330       14.1           0             180.8               28           109   \n",
       "3331        5.0           0             213.8              184           105   \n",
       "3332       13.7           0             234.4               74           113   \n",
       "\n",
       "      mth_bill_wo  \n",
       "0            89.0  \n",
       "1            82.0  \n",
       "2            52.0  \n",
       "3            57.0  \n",
       "4            41.0  \n",
       "...           ...  \n",
       "3328         71.7  \n",
       "3329         56.4  \n",
       "3330         56.0  \n",
       "3331         50.0  \n",
       "3332        100.0  \n",
       "\n",
       "[2850 rows x 11 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned=DF[DF.churn_flag==0]\n",
    "non_churned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "6ca1071b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "105    9\n",
       "119    9\n",
       "93     8\n",
       "113    8\n",
       "76     8\n",
       "      ..\n",
       "39     1\n",
       "174    1\n",
       "212    1\n",
       "166    1\n",
       "201    1\n",
       "Name: weeks_active, Length: 164, dtype: int64"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(churned.weeks_active.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "cf797649",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>1%</th>\n",
       "      <th>5%</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>95%</th>\n",
       "      <th>99%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>144.0</td>\n",
       "      <td>179.0</td>\n",
       "      <td>216.0</td>\n",
       "      <td>271.0</td>\n",
       "      <td>305.0</td>\n",
       "      <td>305.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>74.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>167.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>67.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>101.0</td>\n",
       "      <td>114.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>146.0</td>\n",
       "      <td>150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill_wo</th>\n",
       "      <td>3333.0</td>\n",
       "      <td>56.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>33.0</td>\n",
       "      <td>45.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>66.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count   mean   std   min    1%    5%    25%    50%    75%  \\\n",
       "conrenew_flag     3333.0    1.0   0.0   0.0   0.0   0.0    1.0    1.0    1.0   \n",
       "dataplan_flag     3333.0    0.0   0.0   0.0   0.0   0.0    0.0    0.0    1.0   \n",
       "data_usage        3333.0    1.0   1.0   0.0   0.0   0.0    0.0    0.0    2.0   \n",
       "num_cs_calls      3333.0    2.0   1.0   0.0   0.0   0.0    1.0    1.0    2.0   \n",
       "overagefee        3333.0   10.0   3.0   0.0   4.0   6.0    8.0   10.0   12.0   \n",
       "roam_mins         3333.0   10.0   3.0   0.0   3.0   6.0    8.0   10.0   12.0   \n",
       "churn_flag        3333.0    0.0   0.0   0.0   0.0   0.0    0.0    0.0    0.0   \n",
       "avg_talk_time_wo  3333.0  180.0  54.0  50.0  52.0  90.0  144.0  179.0  216.0   \n",
       "weeks_active_wo   3333.0  101.0  39.0  10.0  12.0  35.0   74.0  101.0  127.0   \n",
       "avg_calls_wo      3333.0  100.0  20.0  50.0  54.0  67.0   87.0  101.0  114.0   \n",
       "mth_bill_wo       3333.0   56.0  16.0  14.0  26.0  33.0   45.0   54.0   66.0   \n",
       "\n",
       "                    95%    99%    max  \n",
       "conrenew_flag       1.0    1.0    1.0  \n",
       "dataplan_flag       1.0    1.0    1.0  \n",
       "data_usage          3.0    4.0    5.0  \n",
       "num_cs_calls        4.0    6.0    9.0  \n",
       "overagefee         14.0   16.0   18.0  \n",
       "roam_mins          15.0   17.0   20.0  \n",
       "churn_flag          1.0    1.0    1.0  \n",
       "avg_talk_time_wo  271.0  305.0  305.0  \n",
       "weeks_active_wo   167.0  195.0  200.0  \n",
       "avg_calls_wo      133.0  146.0  150.0  \n",
       "mth_bill_wo        88.0   99.0  100.0  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.describe([0.01,0.99,0.05,0.75,0.95,0.25]).T.round()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "3007c5ba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>weeks_active</th>\n",
       "      <td>483.0</td>\n",
       "      <td>102.664596</td>\n",
       "      <td>39.467820</td>\n",
       "      <td>1.00</td>\n",
       "      <td>76.00</td>\n",
       "      <td>103.00</td>\n",
       "      <td>127.000</td>\n",
       "      <td>225.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>483.0</td>\n",
       "      <td>0.716356</td>\n",
       "      <td>0.451233</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>483.0</td>\n",
       "      <td>0.165631</td>\n",
       "      <td>0.372135</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>483.0</td>\n",
       "      <td>0.546957</td>\n",
       "      <td>1.155352</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.295</td>\n",
       "      <td>5.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>483.0</td>\n",
       "      <td>2.229814</td>\n",
       "      <td>1.853275</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>4.000</td>\n",
       "      <td>9.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time</th>\n",
       "      <td>483.0</td>\n",
       "      <td>206.914079</td>\n",
       "      <td>68.997792</td>\n",
       "      <td>0.00</td>\n",
       "      <td>153.25</td>\n",
       "      <td>217.60</td>\n",
       "      <td>265.950</td>\n",
       "      <td>350.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls</th>\n",
       "      <td>483.0</td>\n",
       "      <td>101.335404</td>\n",
       "      <td>21.582307</td>\n",
       "      <td>0.00</td>\n",
       "      <td>87.50</td>\n",
       "      <td>103.00</td>\n",
       "      <td>116.500</td>\n",
       "      <td>165.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill</th>\n",
       "      <td>483.0</td>\n",
       "      <td>59.190062</td>\n",
       "      <td>16.065479</td>\n",
       "      <td>14.00</td>\n",
       "      <td>45.00</td>\n",
       "      <td>63.00</td>\n",
       "      <td>69.000</td>\n",
       "      <td>110.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>483.0</td>\n",
       "      <td>10.623085</td>\n",
       "      <td>2.586433</td>\n",
       "      <td>3.55</td>\n",
       "      <td>8.86</td>\n",
       "      <td>10.57</td>\n",
       "      <td>12.475</td>\n",
       "      <td>18.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>483.0</td>\n",
       "      <td>10.700000</td>\n",
       "      <td>2.793190</td>\n",
       "      <td>2.00</td>\n",
       "      <td>8.80</td>\n",
       "      <td>10.60</td>\n",
       "      <td>12.800</td>\n",
       "      <td>20.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>483.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count        mean        std    min     25%     50%      75%  \\\n",
       "weeks_active   483.0  102.664596  39.467820   1.00   76.00  103.00  127.000   \n",
       "conrenew_flag  483.0    0.716356   0.451233   0.00    0.00    1.00    1.000   \n",
       "dataplan_flag  483.0    0.165631   0.372135   0.00    0.00    0.00    0.000   \n",
       "data_usage     483.0    0.546957   1.155352   0.00    0.00    0.00    0.295   \n",
       "num_cs_calls   483.0    2.229814   1.853275   0.00    1.00    2.00    4.000   \n",
       "avg_talk_time  483.0  206.914079  68.997792   0.00  153.25  217.60  265.950   \n",
       "avg_calls      483.0  101.335404  21.582307   0.00   87.50  103.00  116.500   \n",
       "mth_bill       483.0   59.190062  16.065479  14.00   45.00   63.00   69.000   \n",
       "overagefee     483.0   10.623085   2.586433   3.55    8.86   10.57   12.475   \n",
       "roam_mins      483.0   10.700000   2.793190   2.00    8.80   10.60   12.800   \n",
       "churn_flag     483.0    1.000000   0.000000   1.00    1.00    1.00    1.000   \n",
       "\n",
       "                  max  \n",
       "weeks_active   225.00  \n",
       "conrenew_flag    1.00  \n",
       "dataplan_flag    1.00  \n",
       "data_usage       5.40  \n",
       "num_cs_calls     9.00  \n",
       "avg_talk_time  350.80  \n",
       "avg_calls      165.00  \n",
       "mth_bill       110.00  \n",
       "overagefee      18.19  \n",
       "roam_mins       20.00  \n",
       "churn_flag       1.00  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "54ac7813",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.934737</td>\n",
       "      <td>0.247033</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.295439</td>\n",
       "      <td>0.456320</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.862151</td>\n",
       "      <td>1.286095</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.000</td>\n",
       "      <td>4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>1.449825</td>\n",
       "      <td>1.163883</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.000</td>\n",
       "      <td>8.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>9.954618</td>\n",
       "      <td>2.514629</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.230</td>\n",
       "      <td>9.98</td>\n",
       "      <td>11.660</td>\n",
       "      <td>18.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>10.158877</td>\n",
       "      <td>2.784489</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.400</td>\n",
       "      <td>10.20</td>\n",
       "      <td>12.000</td>\n",
       "      <td>18.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>175.340877</td>\n",
       "      <td>49.646034</td>\n",
       "      <td>50.0</td>\n",
       "      <td>142.825</td>\n",
       "      <td>177.20</td>\n",
       "      <td>210.300</td>\n",
       "      <td>305.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>100.749123</td>\n",
       "      <td>39.532205</td>\n",
       "      <td>10.0</td>\n",
       "      <td>73.000</td>\n",
       "      <td>100.00</td>\n",
       "      <td>127.000</td>\n",
       "      <td>200.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>100.317193</td>\n",
       "      <td>19.608356</td>\n",
       "      <td>50.0</td>\n",
       "      <td>87.000</td>\n",
       "      <td>100.00</td>\n",
       "      <td>114.000</td>\n",
       "      <td>150.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>55.781439</td>\n",
       "      <td>16.338094</td>\n",
       "      <td>15.7</td>\n",
       "      <td>45.000</td>\n",
       "      <td>53.00</td>\n",
       "      <td>64.675</td>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count        mean        std   min      25%     50%  \\\n",
       "conrenew_flag     2850.0    0.934737   0.247033   0.0    1.000    1.00   \n",
       "dataplan_flag     2850.0    0.295439   0.456320   0.0    0.000    0.00   \n",
       "data_usage        2850.0    0.862151   1.286095   0.0    0.000    0.00   \n",
       "num_cs_calls      2850.0    1.449825   1.163883   0.0    1.000    1.00   \n",
       "overagefee        2850.0    9.954618   2.514629   0.0    8.230    9.98   \n",
       "roam_mins         2850.0   10.158877   2.784489   0.0    8.400   10.20   \n",
       "churn_flag        2850.0    0.000000   0.000000   0.0    0.000    0.00   \n",
       "avg_talk_time_wo  2850.0  175.340877  49.646034  50.0  142.825  177.20   \n",
       "weeks_active_wo   2850.0  100.749123  39.532205  10.0   73.000  100.00   \n",
       "avg_calls_wo      2850.0  100.317193  19.608356  50.0   87.000  100.00   \n",
       "mth_bill_wo       2850.0   55.781439  16.338094  15.7   45.000   53.00   \n",
       "\n",
       "                      75%     max  \n",
       "conrenew_flag       1.000    1.00  \n",
       "dataplan_flag       1.000    1.00  \n",
       "data_usage          2.000    4.75  \n",
       "num_cs_calls        2.000    8.00  \n",
       "overagefee         11.660   18.09  \n",
       "roam_mins          12.000   18.90  \n",
       "churn_flag          0.000    0.00  \n",
       "avg_talk_time_wo  210.300  305.00  \n",
       "weeks_active_wo   127.000  200.00  \n",
       "avg_calls_wo      114.000  150.00  \n",
       "mth_bill_wo        64.675  100.00  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "ef0c737a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <th>mth_bill_wo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "      <td>3333.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.903090</td>\n",
       "      <td>0.276628</td>\n",
       "      <td>0.816475</td>\n",
       "      <td>1.562856</td>\n",
       "      <td>10.051488</td>\n",
       "      <td>10.237294</td>\n",
       "      <td>0.144914</td>\n",
       "      <td>179.773387</td>\n",
       "      <td>101.009001</td>\n",
       "      <td>100.483948</td>\n",
       "      <td>56.267057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.295879</td>\n",
       "      <td>0.447398</td>\n",
       "      <td>1.272668</td>\n",
       "      <td>1.315491</td>\n",
       "      <td>2.535712</td>\n",
       "      <td>2.791840</td>\n",
       "      <td>0.352067</td>\n",
       "      <td>53.572803</td>\n",
       "      <td>39.447527</td>\n",
       "      <td>19.812403</td>\n",
       "      <td>16.316723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>14.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.979600</td>\n",
       "      <td>3.332000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>51.832000</td>\n",
       "      <td>12.320000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>26.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.070000</td>\n",
       "      <td>10.300000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>179.400000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>101.000000</td>\n",
       "      <td>53.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4.100000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>15.946800</td>\n",
       "      <td>16.668000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>305.000000</td>\n",
       "      <td>195.000000</td>\n",
       "      <td>146.000000</td>\n",
       "      <td>99.232000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.400000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>18.190000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>305.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>150.000000</td>\n",
       "      <td>100.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       conrenew_flag  dataplan_flag   data_usage  num_cs_calls   overagefee  \\\n",
       "count    3333.000000    3333.000000  3333.000000   3333.000000  3333.000000   \n",
       "mean        0.903090       0.276628     0.816475      1.562856    10.051488   \n",
       "std         0.295879       0.447398     1.272668      1.315491     2.535712   \n",
       "min         0.000000       0.000000     0.000000      0.000000     0.000000   \n",
       "1%          0.000000       0.000000     0.000000      0.000000     3.979600   \n",
       "50%         1.000000       0.000000     0.000000      1.000000    10.070000   \n",
       "99%         1.000000       1.000000     4.100000      6.000000    15.946800   \n",
       "max         1.000000       1.000000     5.400000      9.000000    18.190000   \n",
       "\n",
       "         roam_mins   churn_flag  avg_talk_time_wo  weeks_active_wo  \\\n",
       "count  3333.000000  3333.000000       3333.000000      3333.000000   \n",
       "mean     10.237294     0.144914        179.773387       101.009001   \n",
       "std       2.791840     0.352067         53.572803        39.447527   \n",
       "min       0.000000     0.000000         50.000000        10.000000   \n",
       "1%        3.332000     0.000000         51.832000        12.320000   \n",
       "50%      10.300000     0.000000        179.400000       101.000000   \n",
       "99%      16.668000     1.000000        305.000000       195.000000   \n",
       "max      20.000000     1.000000        305.000000       200.000000   \n",
       "\n",
       "       avg_calls_wo  mth_bill_wo  \n",
       "count   3333.000000  3333.000000  \n",
       "mean     100.483948    56.267057  \n",
       "std       19.812403    16.316723  \n",
       "min       50.000000    14.000000  \n",
       "1%        54.000000    26.000000  \n",
       "50%      101.000000    53.500000  \n",
       "99%      146.000000    99.232000  \n",
       "max      150.000000   100.000000  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.describe([0.01,0.99])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c098aac0",
   "metadata": {},
   "source": [
    "# SECTION 4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fd83142",
   "metadata": {},
   "source": [
    "# 1.Compute the below metrics for both Churned and Active customers and comment on any significant difference\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7fab60e",
   "metadata": {},
   "source": [
    "Average Calls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "2a1d8b3c",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF.reset_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "dacbc8d8",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Could not interpret value `avg_calls_wo` for parameter `x`",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_1584/2116122276.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m10\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m5\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0msns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhistplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mchurned\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'avg_calls_wo'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0medgecolor\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'black'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m;\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py\u001b[0m in \u001b[0;36mhistplot\u001b[1;34m(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)\u001b[0m\n\u001b[0;32m   1428\u001b[0m ):\n\u001b[0;32m   1429\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1430\u001b[1;33m     p = _DistributionPlotter(\n\u001b[0m\u001b[0;32m   1431\u001b[0m         \u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1432\u001b[0m         \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0m_DistributionPlotter\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_semantics\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlocals\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    109\u001b[0m     ):\n\u001b[0;32m    110\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 111\u001b[1;33m         \u001b[0msuper\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mvariables\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    112\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    113\u001b[0m     \u001b[1;33m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    603\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mNone\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m{\u001b[0m\u001b[1;33m}\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    604\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 605\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0massign_variables\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    606\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    607\u001b[0m         \u001b[1;32mfor\u001b[0m \u001b[0mvar\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcls\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_semantic_mappings\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36massign_variables\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    666\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    667\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minput_format\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m\"long\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 668\u001b[1;33m             plot_data, variables = self._assign_variables_longform(\n\u001b[0m\u001b[0;32m    669\u001b[0m                 \u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mvariables\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    670\u001b[0m             )\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36m_assign_variables_longform\u001b[1;34m(self, data, **kwargs)\u001b[0m\n\u001b[0;32m    901\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    902\u001b[0m                 \u001b[0merr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34mf\"Could not interpret value `{val}` for parameter `{key}`\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 903\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0merr\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    904\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    905\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: Could not interpret value `avg_calls_wo` for parameter `x`"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 720x360 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churned,x='avg_calls_wo',edgecolor='black');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fd41456e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average number of calls made by maximum number of churned per day is around"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "5217753e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=non_churned,x='avg_calls_wo',edgecolor='black');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "5ba7147b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average number of calls made by maximum number of non churned per day is also around 100"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1dccc282",
   "metadata": {},
   "source": [
    "# Average talk time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "f1058916",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Could not interpret value `avg_talk_time_wo` for parameter `x`",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_1584/3745193803.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m10\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m5\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0msns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhistplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mchurned\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'avg_talk_time_wo'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0medgecolor\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'black'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mbins\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m30\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m;\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py\u001b[0m in \u001b[0;36mhistplot\u001b[1;34m(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)\u001b[0m\n\u001b[0;32m   1428\u001b[0m ):\n\u001b[0;32m   1429\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1430\u001b[1;33m     p = _DistributionPlotter(\n\u001b[0m\u001b[0;32m   1431\u001b[0m         \u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1432\u001b[0m         \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0m_DistributionPlotter\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_semantics\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlocals\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    109\u001b[0m     ):\n\u001b[0;32m    110\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 111\u001b[1;33m         \u001b[0msuper\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mvariables\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    112\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    113\u001b[0m     \u001b[1;33m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    603\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mNone\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m{\u001b[0m\u001b[1;33m}\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    604\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 605\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0massign_variables\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    606\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    607\u001b[0m         \u001b[1;32mfor\u001b[0m \u001b[0mvar\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcls\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_semantic_mappings\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36massign_variables\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    666\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    667\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minput_format\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m\"long\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 668\u001b[1;33m             plot_data, variables = self._assign_variables_longform(\n\u001b[0m\u001b[0;32m    669\u001b[0m                 \u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mvariables\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    670\u001b[0m             )\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36m_assign_variables_longform\u001b[1;34m(self, data, **kwargs)\u001b[0m\n\u001b[0;32m    901\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    902\u001b[0m                 \u001b[0merr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34mf\"Could not interpret value `{val}` for parameter `{key}`\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 903\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0merr\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    904\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    905\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: Could not interpret value `avg_talk_time_wo` for parameter `x`"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 720x360 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churned,x='avg_talk_time_wo',edgecolor='black',bins=30);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "d35cb47d",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Could not interpret value `mth_bill_wo` for parameter `x`",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_1584/3790510181.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m10\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m5\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0msns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhistplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mchurned\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'mth_bill_wo'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0medgecolor\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'black'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m;\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py\u001b[0m in \u001b[0;36mhistplot\u001b[1;34m(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)\u001b[0m\n\u001b[0;32m   1428\u001b[0m ):\n\u001b[0;32m   1429\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1430\u001b[1;33m     p = _DistributionPlotter(\n\u001b[0m\u001b[0;32m   1431\u001b[0m         \u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1432\u001b[0m         \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0m_DistributionPlotter\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_semantics\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlocals\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    109\u001b[0m     ):\n\u001b[0;32m    110\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 111\u001b[1;33m         \u001b[0msuper\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mvariables\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    112\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    113\u001b[0m     \u001b[1;33m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    603\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mNone\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m{\u001b[0m\u001b[1;33m}\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    604\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 605\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0massign_variables\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvariables\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    606\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    607\u001b[0m         \u001b[1;32mfor\u001b[0m \u001b[0mvar\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcls\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_semantic_mappings\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36massign_variables\u001b[1;34m(self, data, variables)\u001b[0m\n\u001b[0;32m    666\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    667\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minput_format\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m\"long\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 668\u001b[1;33m             plot_data, variables = self._assign_variables_longform(\n\u001b[0m\u001b[0;32m    669\u001b[0m                 \u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mvariables\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    670\u001b[0m             )\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\seaborn\\_core.py\u001b[0m in \u001b[0;36m_assign_variables_longform\u001b[1;34m(self, data, **kwargs)\u001b[0m\n\u001b[0;32m    901\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    902\u001b[0m                 \u001b[0merr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34mf\"Could not interpret value `{val}` for parameter `{key}`\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 903\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0merr\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    904\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    905\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: Could not interpret value `mth_bill_wo` for parameter `x`"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 720x360 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churned,x='mth_bill_wo',edgecolor='black');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "1960f958",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF['avg_overallfee']=DF['mth_bill_wo']+DF['overagefee']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "12ff3a79",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF\n",
    "churnned=DF[DF['churn_flag']==1]\n",
    "non_churnned=DF[DF['churn_flag']==0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "77fc639a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>level_0</th>\n",
       "      <th>index</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <th>mth_bill_wo</th>\n",
       "      <th>avg_overallfee</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.29</td>\n",
       "      <td>4</td>\n",
       "      <td>11.43</td>\n",
       "      <td>12.7</td>\n",
       "      <td>1</td>\n",
       "      <td>129.1</td>\n",
       "      <td>65</td>\n",
       "      <td>137</td>\n",
       "      <td>44.9</td>\n",
       "      <td>56.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4</td>\n",
       "      <td>15.89</td>\n",
       "      <td>5.4</td>\n",
       "      <td>1</td>\n",
       "      <td>305.0</td>\n",
       "      <td>161</td>\n",
       "      <td>67</td>\n",
       "      <td>84.0</td>\n",
       "      <td>99.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>21</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5</td>\n",
       "      <td>8.50</td>\n",
       "      <td>5.7</td>\n",
       "      <td>1</td>\n",
       "      <td>62.4</td>\n",
       "      <td>77</td>\n",
       "      <td>89</td>\n",
       "      <td>26.0</td>\n",
       "      <td>34.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>33</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>12.62</td>\n",
       "      <td>11.8</td>\n",
       "      <td>1</td>\n",
       "      <td>249.6</td>\n",
       "      <td>12</td>\n",
       "      <td>118</td>\n",
       "      <td>64.0</td>\n",
       "      <td>76.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>41</td>\n",
       "      <td>41</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.94</td>\n",
       "      <td>0</td>\n",
       "      <td>10.20</td>\n",
       "      <td>14.6</td>\n",
       "      <td>1</td>\n",
       "      <td>173.1</td>\n",
       "      <td>135</td>\n",
       "      <td>85</td>\n",
       "      <td>86.4</td>\n",
       "      <td>96.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3301</th>\n",
       "      <td>3301</td>\n",
       "      <td>3301</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>10.11</td>\n",
       "      <td>10.4</td>\n",
       "      <td>1</td>\n",
       "      <td>280.0</td>\n",
       "      <td>84</td>\n",
       "      <td>113</td>\n",
       "      <td>65.0</td>\n",
       "      <td>75.11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3304</th>\n",
       "      <td>3304</td>\n",
       "      <td>3304</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4</td>\n",
       "      <td>9.93</td>\n",
       "      <td>13.8</td>\n",
       "      <td>1</td>\n",
       "      <td>186.1</td>\n",
       "      <td>71</td>\n",
       "      <td>114</td>\n",
       "      <td>49.0</td>\n",
       "      <td>58.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3320</th>\n",
       "      <td>3320</td>\n",
       "      <td>3320</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.30</td>\n",
       "      <td>4</td>\n",
       "      <td>9.82</td>\n",
       "      <td>9.7</td>\n",
       "      <td>1</td>\n",
       "      <td>140.0</td>\n",
       "      <td>122</td>\n",
       "      <td>101</td>\n",
       "      <td>44.0</td>\n",
       "      <td>53.82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3322</th>\n",
       "      <td>3322</td>\n",
       "      <td>3322</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4</td>\n",
       "      <td>13.28</td>\n",
       "      <td>11.5</td>\n",
       "      <td>1</td>\n",
       "      <td>305.0</td>\n",
       "      <td>62</td>\n",
       "      <td>105</td>\n",
       "      <td>78.0</td>\n",
       "      <td>91.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3323</th>\n",
       "      <td>3323</td>\n",
       "      <td>3323</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.39</td>\n",
       "      <td>5</td>\n",
       "      <td>12.47</td>\n",
       "      <td>13.6</td>\n",
       "      <td>1</td>\n",
       "      <td>118.4</td>\n",
       "      <td>117</td>\n",
       "      <td>126</td>\n",
       "      <td>45.9</td>\n",
       "      <td>58.37</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>483 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      level_0  index  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "10         10     10              1              0        0.29             4   \n",
       "15         15     15              1              0        0.00             4   \n",
       "21         21     21              1              0        0.00             5   \n",
       "33         33     33              1              0        0.00             1   \n",
       "41         41     41              0              1        3.94             0   \n",
       "...       ...    ...            ...            ...         ...           ...   \n",
       "3301     3301   3301              1              0        0.00             0   \n",
       "3304     3304   3304              0              0        0.00             4   \n",
       "3320     3320   3320              0              0        0.30             4   \n",
       "3322     3322   3322              1              0        0.00             4   \n",
       "3323     3323   3323              1              0        0.39             5   \n",
       "\n",
       "      overagefee  roam_mins  churn_flag  avg_talk_time_wo  weeks_active_wo  \\\n",
       "10         11.43       12.7           1             129.1               65   \n",
       "15         15.89        5.4           1             305.0              161   \n",
       "21          8.50        5.7           1              62.4               77   \n",
       "33         12.62       11.8           1             249.6               12   \n",
       "41         10.20       14.6           1             173.1              135   \n",
       "...          ...        ...         ...               ...              ...   \n",
       "3301       10.11       10.4           1             280.0               84   \n",
       "3304        9.93       13.8           1             186.1               71   \n",
       "3320        9.82        9.7           1             140.0              122   \n",
       "3322       13.28       11.5           1             305.0               62   \n",
       "3323       12.47       13.6           1             118.4              117   \n",
       "\n",
       "      avg_calls_wo  mth_bill_wo  avg_overallfee  \n",
       "10             137         44.9           56.33  \n",
       "15              67         84.0           99.89  \n",
       "21              89         26.0           34.50  \n",
       "33             118         64.0           76.62  \n",
       "41              85         86.4           96.60  \n",
       "...            ...          ...             ...  \n",
       "3301           113         65.0           75.11  \n",
       "3304           114         49.0           58.93  \n",
       "3320           101         44.0           53.82  \n",
       "3322           105         78.0           91.28  \n",
       "3323           126         45.9           58.37  \n",
       "\n",
       "[483 rows x 14 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churnned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "20a52be4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churnned,x='avg_overallfee');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "be78d45c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=non_churnned,x='avg_overallfee');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "adef5bf5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Average monthly bill of maximum number of Non churned customers lies between 50-60"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f27aef8b",
   "metadata": {},
   "source": [
    "# Average Overage fee"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "3c0c8c03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churned,x='overagefee',edgecolor='black',);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "eb8e2ea5",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Average overall fee of the maximum number of churned customers is around 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "a0e10e70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=non_churned,x='overagefee',edgecolor='black',);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "3ba458c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average overall fee of the maximum number of non churned customers is also "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e34831d1",
   "metadata": {},
   "source": [
    "# Average Weeks active"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "1f7761ab",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\INDIA\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(non_churned['weeks_active_wo']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "df1cb9cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "#Maximimum number of Churned customers are most likely to be active between 95-120 weeks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "0026a099",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\INDIA\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(non_churned['mth_bill_wo']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "1be9a13d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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q6ysLEkK+3XR0Ounw+Ew6rmCYNaCHThwQJMnT1ZOTo6uuuoqLV26VG63W23atNGECRO0devWULdou379+mnx4sVq3769vve972n06NFasmSJHA6H/z6WZZ1zO5ytWLFCd999tyQpMTExItfEWT6fr8F10Nj2cFdeXq6JEydq1KhRuuGGG9S2bVu98MIL6tatm5xOpyZPnhz266Oxx0SkrglJWrlypcaNG6eYmBhJiph18fXXz8TERKOeKwhmLVRRUZEmTZqkhx56SCNHjtT+/fu1efNm/+8tywq7E1cbsnPnTr3zzjv+25ZlKSEhQR6Px7/N4/E0+PZ9uDl16pR27NihW265RZIidk2cFR8f3+A6OH97RUVF2K+PTz75RJmZmRo5cqSys7MlSaWlpee8gxoJ66Oxx0Qkromz3njjDd1+++3+25GwLs5//TTtuYJg1gKVlZUpOztb+fn5GjZsmKQzD54FCxboq6++Um1trVauXBnWn7476/jx41q8eLFqamrk9Xq1du1aPfjggzp06JA+/fRTnT59Whs2bFBycnKoW7Xd/v37deWVV+qyyy6TFLlr4qy+ffs2uA4SEhIUGxuroqIiSVJBQUFYrw+v16uf/vSneuCBBzR58mT/9tatW+t3v/udDh8+LMuytHz58rBfH409JiJtTZxVWVmp6upqJSYm+reF+7po6PXTtOeK8IrBEeLFF19UTU2NFi1a5N+WmZmpe+65R2PHjlVdXZ3S0tI0fPjwEHYZHDfffLP27NmjESNGyOfzady4cerXr58WLVqkqVOnqqamRikpKRo6dGioW7Xd4cOHFR8f77/ds2fPiFwTZ8XGxja6DvLz85WXlyev16vevXv7z68JR6tXr1ZFRYVeeuklvfTSS5KkW265RQ888IDmz5+v++67T7W1tbr22mv9h8HDVVOPiUhaE2eVlJSc85whSd/73vfCel009vpp0nOFw7Isy/a/AgAAgG/EoUwAAABDEMwAAAAMQTADAAAwBMEMAADAEAQzAAAAQxDMALQ4JSUl6tevX8j+/iuvvKLly5dLkv7617/q+eefD1kvAMIL1zEDgItUVFSk7t27S5LGjh0b4m4AhBOCGQBb3XnnnZo5c6YGDhyoDRs2aNasWdqxY4dat26t2bNnq0ePHvr888+1Y8cOnT59Wr169VJeXp7atWun8vJyzZ8/X2VlZaqtrdWwYcN07733nlP/k08+0c9//nPNmjVLN998sx599FG99957io6OVpcuXbRw4UK1bdu20f4qKio0Z84cHTlyRB6PRwkJCXrqqacUFxenQ4cOac6cOaqsrFRUVJTuu+8+RUdH680339T27dvVunVrVVZW6ssvv9Qtt9yi3/72t1q/fr0k6dixY7r11lv1+uuvq7q6+hv34+vO1tu+fbsuu+wyzZkzRwcPHtSyZcskSWlpafrjH/8on8+n+fPn6+jRo3I4HJo8ebJGjBhx6f9oAEKGQ5kAbJWamqq33npLkvT222/rO9/5jnbu3CnLsrR161YdP35crVq10po1a7Ru3Tq53W7l5+dLkmbMmKFRo0ZpzZo1Wr16tQoLC/WPf/zDX/vjjz/Wvffeq8cee0ypqanavXu33n33Xa1bt05r1qxRYmKi9u/f32R/f//735WUlKSVK1fqjTfeUOvWrVVQUCBJevDBBzV06FD9/e9/1/PPP68nnnhCAwcO1C233KJJkyZp/Pjx/jqDBg1SVVWV/vvf/0qSNmzYoJSUFH3nO9/5xv043+WXX65rrrlG//nPfyRJ//nPf3To0CFVVVXpf//7n5xOp7p27ar77rtPEyZM0Pr16/XCCy/oiSee0K5du77FvxIAU/COGQBbpaam6sEHH1ROTo527typSZMmafv27Wrbtq2uuOIKbdmyRcePH1dhYaEkqba2VnFxcTpx4oR27Nihr776Sr///e8lSSdOnNBHH32kPn366NSpU8rKytL111+vgQMHSpJ69OihVq1aacyYMRo8eLCGDBmiPn36NNnfxIkTtXPnTr300ksqLi7WgQMH1LdvXx09elQfffSRxowZI0nq1KmTXn/99UbrOBwOjRo1SmvXrtU111yjNWvWKCcnp8n9+PqXRzc0t7feektXXHGFOnbsqB49emjHjh3av3+/0tLSVFxcrJqaGqWlpUmSOnbsqLS0NL399tshPf8OwKUhmAGw1fe//33V1tbqjTfe0JVXXqmbb75Z06dPl9Pp1JAhQ1RQUKDc3FylpKRIkqqqqlRTUyOfzyfLsrRixQq1adNG0pkvXY6NjdWXX34pSVq6dKlycnK0efNmDRkyRB06dFBBQYHee+89/fvf/9a0adP005/+9Jx3ts73u9/9Tu+//75GjRqlG264QXV1dbIsS07nmadHh8Phv+/BgwfVuXPnRmuNHj1aI0eO1JgxY3T8+HFdf/318nq9je5HU1JTUzV+/HhdeeWVGjRokDp06KBt27bpv//9r+bNm6fTp0+f05t05ku66+rqmqwLwGwcygRgux/96Ed6/PHHNWjQIHXr1k1er1fr169XWlqaBg8erOXLl+vUqVPy+Xx65JFH9MQTT6hdu3ZKSkryf/H2sWPHNHbsWL3xxhuSpJiYGF133XVasGCBfv3rX8vj8ehf//qXJk2apH79+mnq1KkaMWKE9u7d22Rv27Zt08SJEzVixAjFxcWpsLBQp0+fVrt27dS7d2+9+uqrkqSysjKNHTvWf+i1oQDUsWNH9enTR3PmzNHo0aMl6Rv3ozHx8fG6/PLLtWLFCg0aNEiDBw/Wa6+9pqNHj6pnz5666qqr5HQ69dprr0mSysvLtXnzZt14443N/4cBYByCGQDbpaam6uDBg/7QcOONN8rlcqlTp076xS9+oYSEBI0cOVK33367LMvSzJkzJUn5+fnas2eP0tPTNWbMGA0fPlx33HHHObVvuOEGDRs2TLm5uUpOTtbVV1+t4cOHKyMjQ7t27VJ2dnaTvWVnZ2vx4sVKT0/Xfffdp2uvvVafffaZJOnxxx/Xxo0bdccdd/jPZXO5XEpOTtaKFSv03HPPXVBvzJgx2rdvn0aOHOnf1pz9aGxulZWV6tWrlxITE9W6dWv96Ec/kiRFR0frmWee0Z///Gelp6fr7rvvVnZ2tgYMGPCNdQGYy2FZlhXqJgAAAMA5ZgDCnNfrbfQcs7Zt2+ovf/lLkDs6w9S+AIQW75gBAAAYgnPMAAAADEEwAwAAMATBDAAAwBAEMwAAAEMQzAAAAAzx/xNd9KPciFjSAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=non_churned,x='weeks_active_wo',edgecolor='black');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "0f120452",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Maximum number of Non_churned customers are mostly active upto 100 weeks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "2ba6470a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.934737</td>\n",
       "      <td>0.247033</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.295439</td>\n",
       "      <td>0.456320</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.862151</td>\n",
       "      <td>1.286095</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.000</td>\n",
       "      <td>4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>1.449825</td>\n",
       "      <td>1.163883</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.000</td>\n",
       "      <td>8.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>9.954618</td>\n",
       "      <td>2.514629</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.230</td>\n",
       "      <td>9.98</td>\n",
       "      <td>11.660</td>\n",
       "      <td>18.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>10.158877</td>\n",
       "      <td>2.784489</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.400</td>\n",
       "      <td>10.20</td>\n",
       "      <td>12.000</td>\n",
       "      <td>18.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>175.340877</td>\n",
       "      <td>49.646034</td>\n",
       "      <td>50.0</td>\n",
       "      <td>142.825</td>\n",
       "      <td>177.20</td>\n",
       "      <td>210.300</td>\n",
       "      <td>305.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>100.749123</td>\n",
       "      <td>39.532205</td>\n",
       "      <td>10.0</td>\n",
       "      <td>73.000</td>\n",
       "      <td>100.00</td>\n",
       "      <td>127.000</td>\n",
       "      <td>200.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>100.317193</td>\n",
       "      <td>19.608356</td>\n",
       "      <td>50.0</td>\n",
       "      <td>87.000</td>\n",
       "      <td>100.00</td>\n",
       "      <td>114.000</td>\n",
       "      <td>150.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill_wo</th>\n",
       "      <td>2850.0</td>\n",
       "      <td>55.781439</td>\n",
       "      <td>16.338094</td>\n",
       "      <td>15.7</td>\n",
       "      <td>45.000</td>\n",
       "      <td>53.00</td>\n",
       "      <td>64.675</td>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count        mean        std   min      25%     50%  \\\n",
       "conrenew_flag     2850.0    0.934737   0.247033   0.0    1.000    1.00   \n",
       "dataplan_flag     2850.0    0.295439   0.456320   0.0    0.000    0.00   \n",
       "data_usage        2850.0    0.862151   1.286095   0.0    0.000    0.00   \n",
       "num_cs_calls      2850.0    1.449825   1.163883   0.0    1.000    1.00   \n",
       "overagefee        2850.0    9.954618   2.514629   0.0    8.230    9.98   \n",
       "roam_mins         2850.0   10.158877   2.784489   0.0    8.400   10.20   \n",
       "churn_flag        2850.0    0.000000   0.000000   0.0    0.000    0.00   \n",
       "avg_talk_time_wo  2850.0  175.340877  49.646034  50.0  142.825  177.20   \n",
       "weeks_active_wo   2850.0  100.749123  39.532205  10.0   73.000  100.00   \n",
       "avg_calls_wo      2850.0  100.317193  19.608356  50.0   87.000  100.00   \n",
       "mth_bill_wo       2850.0   55.781439  16.338094  15.7   45.000   53.00   \n",
       "\n",
       "                      75%     max  \n",
       "conrenew_flag       1.000    1.00  \n",
       "dataplan_flag       1.000    1.00  \n",
       "data_usage          2.000    4.75  \n",
       "num_cs_calls        2.000    8.00  \n",
       "overagefee         11.660   18.09  \n",
       "roam_mins          12.000   18.90  \n",
       "churn_flag          0.000    0.00  \n",
       "avg_talk_time_wo  210.300  305.00  \n",
       "weeks_active_wo   127.000  200.00  \n",
       "avg_calls_wo      114.000  150.00  \n",
       "mth_bill_wo        64.675  100.00  "
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "34984725",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.29</td>\n",
       "      <td>4</td>\n",
       "      <td>129.1</td>\n",
       "      <td>137</td>\n",
       "      <td>44.9</td>\n",
       "      <td>11.43</td>\n",
       "      <td>12.7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>161</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4</td>\n",
       "      <td>332.9</td>\n",
       "      <td>67</td>\n",
       "      <td>84.0</td>\n",
       "      <td>15.89</td>\n",
       "      <td>5.4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>77</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5</td>\n",
       "      <td>62.4</td>\n",
       "      <td>89</td>\n",
       "      <td>26.0</td>\n",
       "      <td>8.50</td>\n",
       "      <td>5.7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>249.6</td>\n",
       "      <td>118</td>\n",
       "      <td>64.0</td>\n",
       "      <td>12.62</td>\n",
       "      <td>11.8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.94</td>\n",
       "      <td>0</td>\n",
       "      <td>173.1</td>\n",
       "      <td>85</td>\n",
       "      <td>86.4</td>\n",
       "      <td>10.20</td>\n",
       "      <td>14.6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "10            65              1              0        0.29             4   \n",
       "15           161              1              0        0.00             4   \n",
       "21            77              1              0        0.00             5   \n",
       "33            12              1              0        0.00             1   \n",
       "41           135              0              1        3.94             0   \n",
       "\n",
       "    avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \n",
       "10          129.1        137      44.9       11.43       12.7           1  \n",
       "15          332.9         67      84.0       15.89        5.4           1  \n",
       "21           62.4         89      26.0        8.50        5.7           1  \n",
       "33          249.6        118      64.0       12.62       11.8           1  \n",
       "41          173.1         85      86.4       10.20       14.6           1  "
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c779a73b",
   "metadata": {},
   "source": [
    "# 2. Observe the ‘Churn Rate’ on different flag variables (such as conrenew_flag, dataplan_flag)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "cd1df9df",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.855086\n",
       "1    0.144914\n",
       "Name: churn_flag, dtype: float64"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.churn_flag.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "e83a19fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 14.5% of the customers are actually being churned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "0ce6eaa9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.716356\n",
       "0    0.283644\n",
       "Name: conrenew_flag, dtype: float64"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.conrenew_flag.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "f62364c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 28% of the customers who didnot renewed their contract are being churned\n",
    "# Minimum of the churned people didnot renewed their contract"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "7204940a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.834369\n",
       "1    0.165631\n",
       "Name: dataplan_flag, dtype: float64"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.dataplan_flag.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "b6de4bcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 83% of the customers who didnot have a Data plan are being churned\n",
    "# Maximum of the churned people didnot have a data plan\n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c68884d5",
   "metadata": {},
   "source": [
    "# 3. What kind of relationship ‘Churn Rate’ has with different numerical variables? Use suitable plots to show these results and report your findings. For discrete variables(numeric in nature but with low number of unique values) applying binning to create bins with sufficient and equitable number of data points to observe this relationship (use a different plot type than continuous variables)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "52f4477c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.29</td>\n",
       "      <td>4</td>\n",
       "      <td>129.1</td>\n",
       "      <td>137</td>\n",
       "      <td>44.9</td>\n",
       "      <td>11.43</td>\n",
       "      <td>12.7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>161</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4</td>\n",
       "      <td>332.9</td>\n",
       "      <td>67</td>\n",
       "      <td>84.0</td>\n",
       "      <td>15.89</td>\n",
       "      <td>5.4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>77</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5</td>\n",
       "      <td>62.4</td>\n",
       "      <td>89</td>\n",
       "      <td>26.0</td>\n",
       "      <td>8.50</td>\n",
       "      <td>5.7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>249.6</td>\n",
       "      <td>118</td>\n",
       "      <td>64.0</td>\n",
       "      <td>12.62</td>\n",
       "      <td>11.8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.94</td>\n",
       "      <td>0</td>\n",
       "      <td>173.1</td>\n",
       "      <td>85</td>\n",
       "      <td>86.4</td>\n",
       "      <td>10.20</td>\n",
       "      <td>14.6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "10            65              1              0        0.29             4   \n",
       "15           161              1              0        0.00             4   \n",
       "21            77              1              0        0.00             5   \n",
       "33            12              1              0        0.00             1   \n",
       "41           135              0              1        3.94             0   \n",
       "\n",
       "    avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \n",
       "10          129.1        137      44.9       11.43       12.7           1  \n",
       "15          332.9         67      84.0       15.89        5.4           1  \n",
       "21           62.4         89      26.0        8.50        5.7           1  \n",
       "33          249.6        118      64.0       12.62       11.8           1  \n",
       "41          173.1         85      86.4       10.20       14.6           1  "
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82b580f0",
   "metadata": {},
   "source": [
    "# Contract Renewed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "b3015aad",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Maximum Churned customers are active around 100week"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "b0b0c4a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.716356\n",
       "0    0.283644\n",
       "Name: conrenew_flag, dtype: float64"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r=churned.conrenew_flag.value_counts(normalize=True)\n",
    "r"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "bb36fd8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(r,labels=['Renewed the contract','Not renewed the contract'],autopct='%1.2f%%');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "dd957e88",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 71 percentage of the churned customers did renewed their contract recently\n",
    "# 28 percentage of the churned customers didnot renewed their contract recent"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6408a21",
   "metadata": {},
   "source": [
    "# Dataplan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "9932dbad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.834369\n",
       "1    0.165631\n",
       "Name: dataplan_flag, dtype: float64"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=churned.dataplan_flag.value_counts(normalize=True)\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "fc2b20bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(a,labels=['Didnot have a Data plan',' Have a Data plan'],autopct='%1.2f%%');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "80b2bfaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 16 percentage of the churned customers  have a Data plan\n",
    "# 83 percentage of the churned customers didnot have a Data plan"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93dff750",
   "metadata": {},
   "source": [
    "# Data Usage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "bac3e3ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='data_usage',bins=5);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "8a9f3b42",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of churned customers did not use any amount of Data \n",
    "# In fact many of them didnot have any DataPlan"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f059a7a",
   "metadata": {},
   "source": [
    "# Customer service calls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "565ba434",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='num_cs_calls',bins=5);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "f66ddc7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of churned customers,i.e, 25% made a single call\n",
    "# similarly 19% have did not make any calls\n",
    "# 18% of churned customers made two calls\n",
    "# 15% of churned customers made four calls\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "ad5d8060",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.252588\n",
       "0    0.190476\n",
       "2    0.180124\n",
       "4    0.157350\n",
       "3    0.091097\n",
       "5    0.082816\n",
       "6    0.028986\n",
       "7    0.010352\n",
       "9    0.004141\n",
       "8    0.002070\n",
       "Name: num_cs_calls, dtype: float64"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.num_cs_calls.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "79ccadb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data=churned,x='num_cs_calls');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "bd4060c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\INDIA\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(churned['num_cs_calls']);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1993bf04",
   "metadata": {},
   "source": [
    "# Average talk time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "28414680",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='avg_talk_time');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "bd97c47a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Average talk time of the most of the churned customers lies between 225-280 minutes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c61d29c3",
   "metadata": {},
   "source": [
    "# Average calls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "05789cb7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churned,x='avg_calls');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "06e07367",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average number of calls made by maximum number of churned per day is around 100"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "622acd2d",
   "metadata": {},
   "source": [
    "# Monthly bill"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "d34131fb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churned,x='mth_bill',edgecolor='black');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af662625",
   "metadata": {},
   "source": [
    "# Overage fee"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "629a7982",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.histplot(data=churned,x='overagefee',edgecolor='black',);\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "cae12770",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average overall fee of the maximum number of churned customers is around 10"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecaac001",
   "metadata": {},
   "source": [
    "# Roaming Minutes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "6943f08e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='roam_mins');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "fab0a3d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Roaming minutes of the maximum churned customers is around 10-11 minutes\n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab234be6",
   "metadata": {},
   "source": [
    "# 4. For the two set of customers (conrenew_flag=1 and conrenew_flag=0) observe the distribution of below numeric variables and report any significant difference:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "b7ddc0e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>323.0</td>\n",
       "      <td>104.071207</td>\n",
       "      <td>38.009044</td>\n",
       "      <td>10.0</td>\n",
       "      <td>79.5</td>\n",
       "      <td>104.0</td>\n",
       "      <td>132.5</td>\n",
       "      <td>200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.680399</td>\n",
       "      <td>39.590822</td>\n",
       "      <td>10.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>100.0</td>\n",
       "      <td>127.0</td>\n",
       "      <td>200.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count        mean        std   min   25%    50%    75%    max\n",
       "conrenew_flag                                                                \n",
       "0               323.0  104.071207  38.009044  10.0  79.5  104.0  132.5  200.0\n",
       "1              3010.0  100.680399  39.590822  10.0  73.0  100.0  127.0  200.0"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.groupby('conrenew_flag')['weeks_active_wo'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "4e92f819",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of customers who didnot renewed their contract are active around 104 weeks\n",
    "# Maximum number of customers who renewed their contract are active around 100 weeks\n",
    "# People who didnot renewing their contract are more active than customers who renewed their contract, because they might have better service and are hesitating for next renewal(SO these customers might be new for the company on that particular year)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "2eddee9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>323.0</td>\n",
       "      <td>187.845511</td>\n",
       "      <td>55.781732</td>\n",
       "      <td>50.0</td>\n",
       "      <td>148.2</td>\n",
       "      <td>188.9</td>\n",
       "      <td>228.65</td>\n",
       "      <td>305.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>178.907176</td>\n",
       "      <td>53.267293</td>\n",
       "      <td>50.0</td>\n",
       "      <td>143.3</td>\n",
       "      <td>179.0</td>\n",
       "      <td>214.90</td>\n",
       "      <td>305.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count        mean        std   min    25%    50%     75%  \\\n",
       "conrenew_flag                                                              \n",
       "0               323.0  187.845511  55.781732  50.0  148.2  188.9  228.65   \n",
       "1              3010.0  178.907176  53.267293  50.0  143.3  179.0  214.90   \n",
       "\n",
       "                 max  \n",
       "conrenew_flag         \n",
       "0              305.0  \n",
       "1              305.0  "
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.groupby('conrenew_flag')['avg_talk_time_wo'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "eee0e95b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of customers who didnot renewed their contract have a average tlak time of 187 minutes\n",
    "## Maximum number of customers who renewed their contract have a average tlak time of 178 minutes\n",
    "# For every percentile above people who did not renewed their contract have more average talktime than people who renewed their contract\n",
    "# The reason for more average talk time for non-contract renewal than of contract renewal customers because there might be problem in signal during the conversation in a call after renewing the contract\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "45ef3e9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>323.0</td>\n",
       "      <td>100.693498</td>\n",
       "      <td>20.975337</td>\n",
       "      <td>50.0</td>\n",
       "      <td>85.50</td>\n",
       "      <td>103.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>146.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.461462</td>\n",
       "      <td>19.687067</td>\n",
       "      <td>50.0</td>\n",
       "      <td>87.25</td>\n",
       "      <td>101.0</td>\n",
       "      <td>114.0</td>\n",
       "      <td>150.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count        mean        std   min    25%    50%    75%    max\n",
       "conrenew_flag                                                                 \n",
       "0               323.0  100.693498  20.975337  50.0  85.50  103.0  117.0  146.0\n",
       "1              3010.0  100.461462  19.687067  50.0  87.25  101.0  114.0  150.0"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.groupby('conrenew_flag')['avg_calls_wo'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "4000e935",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>level_0</th>\n",
       "      <th>index</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>avg_talk_time_wo</th>\n",
       "      <th>weeks_active_wo</th>\n",
       "      <th>avg_calls_wo</th>\n",
       "      <th>mth_bill_wo</th>\n",
       "      <th>avg_overallfee</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.70</td>\n",
       "      <td>1</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>265.1</td>\n",
       "      <td>128</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "      <td>98.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>1</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>161.6</td>\n",
       "      <td>107</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "      <td>91.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>137</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "      <td>58.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>3.10</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0</td>\n",
       "      <td>299.4</td>\n",
       "      <td>84</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "      <td>60.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3</td>\n",
       "      <td>7.42</td>\n",
       "      <td>10.1</td>\n",
       "      <td>0</td>\n",
       "      <td>166.7</td>\n",
       "      <td>75</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "      <td>48.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3328</th>\n",
       "      <td>3328</td>\n",
       "      <td>3328</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.67</td>\n",
       "      <td>2</td>\n",
       "      <td>10.78</td>\n",
       "      <td>9.9</td>\n",
       "      <td>0</td>\n",
       "      <td>156.2</td>\n",
       "      <td>192</td>\n",
       "      <td>77</td>\n",
       "      <td>71.7</td>\n",
       "      <td>82.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3329</th>\n",
       "      <td>3329</td>\n",
       "      <td>3329</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.34</td>\n",
       "      <td>3</td>\n",
       "      <td>7.67</td>\n",
       "      <td>9.6</td>\n",
       "      <td>0</td>\n",
       "      <td>231.1</td>\n",
       "      <td>68</td>\n",
       "      <td>57</td>\n",
       "      <td>56.4</td>\n",
       "      <td>64.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3330</th>\n",
       "      <td>3330</td>\n",
       "      <td>3330</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>14.44</td>\n",
       "      <td>14.1</td>\n",
       "      <td>0</td>\n",
       "      <td>180.8</td>\n",
       "      <td>28</td>\n",
       "      <td>109</td>\n",
       "      <td>56.0</td>\n",
       "      <td>70.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3331</th>\n",
       "      <td>3331</td>\n",
       "      <td>3331</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>7.98</td>\n",
       "      <td>5.0</td>\n",
       "      <td>0</td>\n",
       "      <td>213.8</td>\n",
       "      <td>184</td>\n",
       "      <td>105</td>\n",
       "      <td>50.0</td>\n",
       "      <td>57.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3332</th>\n",
       "      <td>3332</td>\n",
       "      <td>3332</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>0</td>\n",
       "      <td>13.30</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>234.4</td>\n",
       "      <td>74</td>\n",
       "      <td>113</td>\n",
       "      <td>100.0</td>\n",
       "      <td>113.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3333 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      level_0  index  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "0           0      0              1              1        2.70             1   \n",
       "1           1      1              1              1        3.70             1   \n",
       "2           2      2              1              0        0.00             0   \n",
       "3           3      3              0              0        0.00             2   \n",
       "4           4      4              0              0        0.00             3   \n",
       "...       ...    ...            ...            ...         ...           ...   \n",
       "3328     3328   3328              1              1        2.67             2   \n",
       "3329     3329   3329              1              0        0.34             3   \n",
       "3330     3330   3330              1              0        0.00             2   \n",
       "3331     3331   3331              0              0        0.00             2   \n",
       "3332     3332   3332              1              1        3.70             0   \n",
       "\n",
       "      overagefee  roam_mins  churn_flag  avg_talk_time_wo  weeks_active_wo  \\\n",
       "0           9.87       10.0           0             265.1              128   \n",
       "1           9.78       13.7           0             161.6              107   \n",
       "2           6.06       12.2           0             243.4              137   \n",
       "3           3.10        6.6           0             299.4               84   \n",
       "4           7.42       10.1           0             166.7               75   \n",
       "...          ...        ...         ...               ...              ...   \n",
       "3328       10.78        9.9           0             156.2              192   \n",
       "3329        7.67        9.6           0             231.1               68   \n",
       "3330       14.44       14.1           0             180.8               28   \n",
       "3331        7.98        5.0           0             213.8              184   \n",
       "3332       13.30       13.7           0             234.4               74   \n",
       "\n",
       "      avg_calls_wo  mth_bill_wo  avg_overallfee  \n",
       "0              110         89.0           98.87  \n",
       "1              123         82.0           91.78  \n",
       "2              114         52.0           58.06  \n",
       "3               71         57.0           60.10  \n",
       "4              113         41.0           48.42  \n",
       "...            ...          ...             ...  \n",
       "3328            77         71.7           82.48  \n",
       "3329            57         56.4           64.07  \n",
       "3330           109         56.0           70.44  \n",
       "3331           105         50.0           57.98  \n",
       "3332           113        100.0          113.30  \n",
       "\n",
       "[3333 rows x 14 columns]"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#There is no significant difference between average calls made by the customers who renewed their contract and also who didnot renewed their contract\n",
    "# For maximum percentile customers who renewed their contract have made 19 calls more than of customers who didnot renewed their contract \n",
    "# By comparing average calls and average talktime,calls might be same for all of them but the talktime for contract renewed is less for who renewed their contract.This might due to the problems in call service provieded by the company after the renewal\n",
    "DF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "86e683c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>323.0</td>\n",
       "      <td>58.587926</td>\n",
       "      <td>17.308423</td>\n",
       "      <td>24.0</td>\n",
       "      <td>45.800</td>\n",
       "      <td>56.0</td>\n",
       "      <td>69.75</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>56.018007</td>\n",
       "      <td>16.189974</td>\n",
       "      <td>14.0</td>\n",
       "      <td>44.925</td>\n",
       "      <td>53.0</td>\n",
       "      <td>66.00</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count       mean        std   min     25%   50%    75%    max\n",
       "conrenew_flag                                                                \n",
       "0               323.0  58.587926  17.308423  24.0  45.800  56.0  69.75  100.0\n",
       "1              3010.0  56.018007  16.189974  14.0  44.925  53.0  66.00  100.0"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.groupby('conrenew_flag')['mth_bill_wo'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "98aa1164",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For maximum number of customers of who renewed their contract and donot renewed their contract has a similar average monthly bill,i.e, around 56\n",
    "# Both the customers got significant monthly bill\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "ccd4ea8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>323.0</td>\n",
       "      <td>1.464396</td>\n",
       "      <td>1.337863</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>1.573422</td>\n",
       "      <td>1.312855</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count      mean       std  min  25%  50%  75%  max\n",
       "conrenew_flag                                                     \n",
       "0               323.0  1.464396  1.337863  0.0  0.0  1.0  2.0  9.0\n",
       "1              3010.0  1.573422  1.312855  0.0  1.0  1.0  2.0  9.0"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.groupby('conrenew_flag')['num_cs_calls'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "f5ad702b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#25% of the contract renewed customers have made atleast a single customer service call\n",
    "#25% of the customers who didnot renewed their contract didnot made a single customer service call \n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a28e172",
   "metadata": {},
   "source": [
    "# SECTION 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "3117b4e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF=pd.read_excel('07 Customer Churn Case Study Data (1).xlsx',sheet_name='Data')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "05d9bf7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "DF['total_bill']=DF['mth_bill']+DF['overagefee']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "7636f438",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>total_bill</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>128</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.7</td>\n",
       "      <td>1</td>\n",
       "      <td>265.1</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>98.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>107</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.7</td>\n",
       "      <td>1</td>\n",
       "      <td>161.6</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>91.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>137</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "      <td>58.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>299.4</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.10</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0</td>\n",
       "      <td>60.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>75</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>166.7</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "      <td>7.42</td>\n",
       "      <td>10.1</td>\n",
       "      <td>0</td>\n",
       "      <td>48.42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "0           128              1              1         2.7             1   \n",
       "1           107              1              1         3.7             1   \n",
       "2           137              1              0         0.0             0   \n",
       "3            84              0              0         0.0             2   \n",
       "4            75              0              0         0.0             3   \n",
       "\n",
       "   avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \\\n",
       "0          265.1        110      89.0        9.87       10.0           0   \n",
       "1          161.6        123      82.0        9.78       13.7           0   \n",
       "2          243.4        114      52.0        6.06       12.2           0   \n",
       "3          299.4         71      57.0        3.10        6.6           0   \n",
       "4          166.7        113      41.0        7.42       10.1           0   \n",
       "\n",
       "   total_bill  \n",
       "0       98.87  \n",
       "1       91.78  \n",
       "2       58.06  \n",
       "3       60.10  \n",
       "4       48.42  "
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e8eba527",
   "metadata": {},
   "source": [
    "# 1. What is the impact on revenue due to customer churn?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "3853273a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "221166.71000000002"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF['total_bill'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "b824a436",
   "metadata": {},
   "outputs": [],
   "source": [
    "churned_new=DF[DF['churn_flag']==1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "c7c5727b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "33719.75"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned_new['total_bill'].sum()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "61b05f7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "non_churned_new=DF[DF['churn_flag']==0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "de7b92f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "187446.95999999996"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned_new['total_bill'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "7a4f9820",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "84.75369552678156"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(non_churned_new['total_bill'].sum()/DF['total_bill'].sum())*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "123278b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15.246304473218414"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(churned_new['total_bill'].sum()/DF['total_bill'].sum())*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "fc9bfcae",
   "metadata": {},
   "outputs": [],
   "source": [
    "#15 percentage of the revenue is lost than before after the customer churn\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "64377a8e",
   "metadata": {},
   "source": [
    "# OR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "1b068a5f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "187665.09999999998"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF['mth_bill'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "eca2884f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "28588.8"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned['mth_bill'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "380fd398",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "158977.1"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned['mth_bill_wo'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "2510f915",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'mth_bill_'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3360\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3361\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3362\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'mth_bill_'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_1584/831805009.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mround\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mchurned\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'mth_bill_'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msum\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m/\u001b[0m\u001b[0mnon_churned\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'mth_bill'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msum\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m*\u001b[0m\u001b[1;36m100\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3456\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3457\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3458\u001b[1;33m             \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3459\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3460\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   3361\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3362\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3363\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3364\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3365\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mis_scalar\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0misna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhasnans\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'mth_bill_'"
     ]
    }
   ],
   "source": [
    "round((churned['mth_bill_'].sum()/non_churned['mth_bill'].sum())*100)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d5a840d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "40b31155",
   "metadata": {},
   "source": [
    "# Section 05: Open-ended questions and recommendation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a01e3a4",
   "metadata": {},
   "source": [
    "# • Whether customer is renewing the contract or not"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "01711a71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.716356\n",
       "0    0.283644\n",
       "Name: conrenew_flag, dtype: float64"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned['conrenew_flag'].value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "db49afd8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.934737\n",
       "0    0.065263\n",
       "Name: conrenew_flag, dtype: float64"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned['conrenew_flag'].value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "3842f4cf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#72% of the churned customers renewed their contract,So there might be facing internal issuses after the contract renewal\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "52cf90a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#28% percentage of the churned customers didnot renewed their contract \n",
    "#And for Non-churned there are only 6% of customers who didnot renewed their contract\n",
    "#Hence from above we can say that customers are hesitating for renewing the contract\n",
    "#This can be minimized by giving disscounts on the renewal plans and can also adding minimum data along with the plan\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fe96049",
   "metadata": {},
   "source": [
    "# Whether the customer has already made certain number of calls to Customer Care and may be considering an Operator switch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "8c44b583",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.252588\n",
       "0    0.190476\n",
       "2    0.180124\n",
       "4    0.157350\n",
       "3    0.091097\n",
       "5    0.082816\n",
       "6    0.028986\n",
       "7    0.010352\n",
       "9    0.004141\n",
       "8    0.002070\n",
       "Name: num_cs_calls, dtype: float64"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned['num_cs_calls'].value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "51c980dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.371579\n",
       "2    0.235789\n",
       "0    0.212281\n",
       "3    0.135088\n",
       "4    0.031579\n",
       "5    0.009123\n",
       "6    0.002807\n",
       "7    0.001404\n",
       "8    0.000351\n",
       "Name: num_cs_calls, dtype: float64"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned['num_cs_calls'].value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "6c860bbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 25% of Churned customers made one customer service call and 37% for Non-churned\n",
    "#19% of Churned customers and 21% are not even made a single customer service call so,the company has to educate them how to use customer service\n",
    "#18% for churned made two customer calls and 23% for non_churned customers\n",
    "#15% of churned customers made four calls and for non-churned the percentage is only 3%\n",
    "# so these 15% people are facing more issues and they knows how to contact customer service\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "6ed4ccb5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.countplot(data=churned,x='num_cs_calls',hue='churn_flag');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "a8e30250",
   "metadata": {},
   "outputs": [],
   "source": [
    "#By comparing both churned and non_churned the company has to investigate and address common problems faced by the customers and  educate them to make use of customer service \n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e233286",
   "metadata": {},
   "source": [
    "# When the overage fees charged in the last 12 months exceeds a certain threshold"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "d1eeb025",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True     480\n",
       "False      3\n",
       "Name: overagefee, dtype: int64"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(churned['overagefee']>4).value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "f711dbe8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True     0.993789\n",
       "False    0.006211\n",
       "Name: overagefee, dtype: float64"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(churned['overagefee']>4).value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "02b59bec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='overagefee');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "44c654fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Churning of the customers started after 4 of Overagefee\n",
    "#Maximum of the churned customers has 10 of the Overagefee\n",
    "#This can be minimized by either decreasing the charges on Overagefee for 4-6 overagefee or allowing the customers to use the service from 4-10 overagefee for free\n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1bd4ed93",
   "metadata": {},
   "source": [
    "# When the monthly bill exceeds a certain amount"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "93f73f25",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True     482\n",
       "False      1\n",
       "Name: mth_bill, dtype: int64"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(churned['mth_bill']>15).value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "9e7a4ff0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='mth_bill',bins=20);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "75bd9168",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    483.000000\n",
       "mean      59.190062\n",
       "std       16.065479\n",
       "min       14.000000\n",
       "25%       45.000000\n",
       "50%       63.000000\n",
       "75%       69.000000\n",
       "max      110.000000\n",
       "Name: mth_bill, dtype: float64"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned['mth_bill'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "e89a0270",
   "metadata": {},
   "outputs": [],
   "source": [
    "ss=churned[(churned['mth_bill']>15) | (churned['avg_talk_time'])]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "e6f9df8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "plt.scatter(ss['mth_bill'],ss['avg_talk_time']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "7ad719b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Customers whose monthly bill more than 60 are more and their talk time is in between 220-280 minutes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "af514fec",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Churning of the customers have started from 15 \n",
    "#Maxiimum churned people have monthly bill around 60\n",
    "#Company has to identify whose monthly bill is between 15-60 and has to provide them with extra talktime\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "337db232",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    483.000000\n",
       "mean      69.813147\n",
       "std       17.246306\n",
       "min       21.980000\n",
       "25%       54.330000\n",
       "50%       73.790000\n",
       "75%       80.730000\n",
       "max      122.750000\n",
       "Name: total_bill, dtype: float64"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(churned_new['total_bill']).describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "8708119b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    483.000000\n",
       "mean      69.813147\n",
       "std       17.246306\n",
       "min       21.980000\n",
       "25%       54.330000\n",
       "50%       73.790000\n",
       "75%       80.730000\n",
       "max      122.750000\n",
       "Name: total_bill, dtype: float64"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(churned_new['total_bill']).describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "a84e8b01",
   "metadata": {},
   "outputs": [],
   "source": [
    "#By checking both for churned and non-churned customers, most churned customers having total bill more than non-churned customers\n",
    "#This concludes that the Telecom company losing high paid customers\n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38ba602c",
   "metadata": {},
   "source": [
    "# 4. What are the possible reasons of non-renewal of contract?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "e06d2574",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    3010\n",
       "0     323\n",
       "Name: conrenew_flag, dtype: int64"
      ]
     },
     "execution_count": 183,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF['conrenew_flag'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "8e7de3aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    346\n",
       "0    137\n",
       "Name: conrenew_flag, dtype: int64"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned['conrenew_flag'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "2de20dae",
   "metadata": {},
   "outputs": [],
   "source": [
    "con_ren=DF[DF['conrenew_flag']==1]\n",
    "non_con_ren=DF[DF['conrenew_flag']==1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "b85f8b1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>weeks_active</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.742193</td>\n",
       "      <td>39.968207</td>\n",
       "      <td>1.00</td>\n",
       "      <td>73.0000</td>\n",
       "      <td>100.00</td>\n",
       "      <td>127.0000</td>\n",
       "      <td>243.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.275748</td>\n",
       "      <td>0.446964</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.808462</td>\n",
       "      <td>1.261818</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.7600</td>\n",
       "      <td>4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>1.573422</td>\n",
       "      <td>1.312855</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>9.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>178.893887</td>\n",
       "      <td>54.141286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>143.3000</td>\n",
       "      <td>179.00</td>\n",
       "      <td>214.9000</td>\n",
       "      <td>350.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.410963</td>\n",
       "      <td>19.964447</td>\n",
       "      <td>0.00</td>\n",
       "      <td>87.2500</td>\n",
       "      <td>101.00</td>\n",
       "      <td>114.0000</td>\n",
       "      <td>165.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>56.050731</td>\n",
       "      <td>16.285239</td>\n",
       "      <td>14.00</td>\n",
       "      <td>44.9250</td>\n",
       "      <td>53.00</td>\n",
       "      <td>66.0000</td>\n",
       "      <td>111.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>10.035621</td>\n",
       "      <td>2.523754</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.3025</td>\n",
       "      <td>10.07</td>\n",
       "      <td>11.7600</td>\n",
       "      <td>18.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>10.195349</td>\n",
       "      <td>2.798937</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.4000</td>\n",
       "      <td>10.20</td>\n",
       "      <td>12.1000</td>\n",
       "      <td>18.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.114950</td>\n",
       "      <td>0.319015</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_bill</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>66.086352</td>\n",
       "      <td>17.173249</td>\n",
       "      <td>19.38</td>\n",
       "      <td>53.8525</td>\n",
       "      <td>63.68</td>\n",
       "      <td>76.7475</td>\n",
       "      <td>123.63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count        mean        std    min       25%     50%  \\\n",
       "weeks_active   3010.0  100.742193  39.968207   1.00   73.0000  100.00   \n",
       "conrenew_flag  3010.0    1.000000   0.000000   1.00    1.0000    1.00   \n",
       "dataplan_flag  3010.0    0.275748   0.446964   0.00    0.0000    0.00   \n",
       "data_usage     3010.0    0.808462   1.261818   0.00    0.0000    0.00   \n",
       "num_cs_calls   3010.0    1.573422   1.312855   0.00    1.0000    1.00   \n",
       "avg_talk_time  3010.0  178.893887  54.141286   0.00  143.3000  179.00   \n",
       "avg_calls      3010.0  100.410963  19.964447   0.00   87.2500  101.00   \n",
       "mth_bill       3010.0   56.050731  16.285239  14.00   44.9250   53.00   \n",
       "overagefee     3010.0   10.035621   2.523754   0.00    8.3025   10.07   \n",
       "roam_mins      3010.0   10.195349   2.798937   0.00    8.4000   10.20   \n",
       "churn_flag     3010.0    0.114950   0.319015   0.00    0.0000    0.00   \n",
       "total_bill     3010.0   66.086352  17.173249  19.38   53.8525   63.68   \n",
       "\n",
       "                    75%     max  \n",
       "weeks_active   127.0000  243.00  \n",
       "conrenew_flag    1.0000    1.00  \n",
       "dataplan_flag    1.0000    1.00  \n",
       "data_usage       1.7600    4.75  \n",
       "num_cs_calls     2.0000    9.00  \n",
       "avg_talk_time  214.9000  350.80  \n",
       "avg_calls      114.0000  165.00  \n",
       "mth_bill        66.0000  111.30  \n",
       "overagefee      11.7600   18.09  \n",
       "roam_mins       12.1000   18.90  \n",
       "churn_flag       0.0000    1.00  \n",
       "total_bill      76.7475  123.63  "
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con_ren.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "c16954e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>weeks_active</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.742193</td>\n",
       "      <td>39.968207</td>\n",
       "      <td>1.00</td>\n",
       "      <td>73.0000</td>\n",
       "      <td>100.00</td>\n",
       "      <td>127.0000</td>\n",
       "      <td>243.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.275748</td>\n",
       "      <td>0.446964</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.808462</td>\n",
       "      <td>1.261818</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.7600</td>\n",
       "      <td>4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>1.573422</td>\n",
       "      <td>1.312855</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>9.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>178.893887</td>\n",
       "      <td>54.141286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>143.3000</td>\n",
       "      <td>179.00</td>\n",
       "      <td>214.9000</td>\n",
       "      <td>350.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.410963</td>\n",
       "      <td>19.964447</td>\n",
       "      <td>0.00</td>\n",
       "      <td>87.2500</td>\n",
       "      <td>101.00</td>\n",
       "      <td>114.0000</td>\n",
       "      <td>165.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>56.050731</td>\n",
       "      <td>16.285239</td>\n",
       "      <td>14.00</td>\n",
       "      <td>44.9250</td>\n",
       "      <td>53.00</td>\n",
       "      <td>66.0000</td>\n",
       "      <td>111.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>10.035621</td>\n",
       "      <td>2.523754</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.3025</td>\n",
       "      <td>10.07</td>\n",
       "      <td>11.7600</td>\n",
       "      <td>18.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>10.195349</td>\n",
       "      <td>2.798937</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.4000</td>\n",
       "      <td>10.20</td>\n",
       "      <td>12.1000</td>\n",
       "      <td>18.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.114950</td>\n",
       "      <td>0.319015</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_bill</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>66.086352</td>\n",
       "      <td>17.173249</td>\n",
       "      <td>19.38</td>\n",
       "      <td>53.8525</td>\n",
       "      <td>63.68</td>\n",
       "      <td>76.7475</td>\n",
       "      <td>123.63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count        mean        std    min       25%     50%  \\\n",
       "weeks_active   3010.0  100.742193  39.968207   1.00   73.0000  100.00   \n",
       "conrenew_flag  3010.0    1.000000   0.000000   1.00    1.0000    1.00   \n",
       "dataplan_flag  3010.0    0.275748   0.446964   0.00    0.0000    0.00   \n",
       "data_usage     3010.0    0.808462   1.261818   0.00    0.0000    0.00   \n",
       "num_cs_calls   3010.0    1.573422   1.312855   0.00    1.0000    1.00   \n",
       "avg_talk_time  3010.0  178.893887  54.141286   0.00  143.3000  179.00   \n",
       "avg_calls      3010.0  100.410963  19.964447   0.00   87.2500  101.00   \n",
       "mth_bill       3010.0   56.050731  16.285239  14.00   44.9250   53.00   \n",
       "overagefee     3010.0   10.035621   2.523754   0.00    8.3025   10.07   \n",
       "roam_mins      3010.0   10.195349   2.798937   0.00    8.4000   10.20   \n",
       "churn_flag     3010.0    0.114950   0.319015   0.00    0.0000    0.00   \n",
       "total_bill     3010.0   66.086352  17.173249  19.38   53.8525   63.68   \n",
       "\n",
       "                    75%     max  \n",
       "weeks_active   127.0000  243.00  \n",
       "conrenew_flag    1.0000    1.00  \n",
       "dataplan_flag    1.0000    1.00  \n",
       "data_usage       1.7600    4.75  \n",
       "num_cs_calls     2.0000    9.00  \n",
       "avg_talk_time  214.9000  350.80  \n",
       "avg_calls      114.0000  165.00  \n",
       "mth_bill        66.0000  111.30  \n",
       "overagefee      11.7600   18.09  \n",
       "roam_mins       12.1000   18.90  \n",
       "churn_flag       0.0000    1.00  \n",
       "total_bill      76.7475  123.63  "
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_con_ren.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "4b97ca62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.724252\n",
       "1    0.275748\n",
       "Name: dataplan_flag, dtype: float64"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con_ren['dataplan_flag'].value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "d1ce0910",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.724252\n",
       "1    0.275748\n",
       "Name: dataplan_flag, dtype: float64"
      ]
     },
     "execution_count": 189,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_con_ren['dataplan_flag'].value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "ea12e493",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    1069\n",
       "2     697\n",
       "0     614\n",
       "3     391\n",
       "4     145\n",
       "5      60\n",
       "6      22\n",
       "7       9\n",
       "8       2\n",
       "9       1\n",
       "Name: num_cs_calls, dtype: int64"
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con_ren['num_cs_calls'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "14ecda5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(con_ren['num_cs_calls']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "2a222683",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>total_bill</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>128</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.70</td>\n",
       "      <td>1</td>\n",
       "      <td>265.1</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>98.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>107</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>1</td>\n",
       "      <td>161.6</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>91.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>137</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "      <td>58.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>121</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.03</td>\n",
       "      <td>3</td>\n",
       "      <td>218.2</td>\n",
       "      <td>88</td>\n",
       "      <td>87.3</td>\n",
       "      <td>17.43</td>\n",
       "      <td>7.5</td>\n",
       "      <td>0</td>\n",
       "      <td>104.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>117</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.19</td>\n",
       "      <td>1</td>\n",
       "      <td>184.5</td>\n",
       "      <td>97</td>\n",
       "      <td>63.9</td>\n",
       "      <td>17.58</td>\n",
       "      <td>8.7</td>\n",
       "      <td>0</td>\n",
       "      <td>81.48</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "0           128              1              1        2.70             1   \n",
       "1           107              1              1        3.70             1   \n",
       "2           137              1              0        0.00             0   \n",
       "6           121              1              1        2.03             3   \n",
       "8           117              1              0        0.19             1   \n",
       "\n",
       "   avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \\\n",
       "0          265.1        110      89.0        9.87       10.0           0   \n",
       "1          161.6        123      82.0        9.78       13.7           0   \n",
       "2          243.4        114      52.0        6.06       12.2           0   \n",
       "6          218.2         88      87.3       17.43        7.5           0   \n",
       "8          184.5         97      63.9       17.58        8.7           0   \n",
       "\n",
       "   total_bill  \n",
       "0       98.87  \n",
       "1       91.78  \n",
       "2       58.06  \n",
       "6      104.73  \n",
       "8       81.48  "
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con_ren.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3edacedc",
   "metadata": {},
   "source": [
    "# EXTRAS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "150e9ef3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.716356\n",
       "0    0.283644\n",
       "Name: conrenew_flag, dtype: float64"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r=churned.conrenew_flag.value_counts(normalize=True)\n",
    "r"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "eee93fba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(r,labels=['Renewed the contract','Not renewed the contract'],autopct='%1.2f%%');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "56f90dd0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 71 percentage of the churned customers did renewed their contract recently\n",
    "# 28 percentage of the churned customers didnot renewed their contract recently\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "1c909d4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    346\n",
       "0    137\n",
       "Name: conrenew_flag, dtype: int64"
      ]
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.conrenew_flag.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "61f77042",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,5))\n",
    "sns.countplot(data=churned,x='conrenew_flag');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "692c374b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.934737\n",
       "0    0.065263\n",
       "Name: conrenew_flag, dtype: float64"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# For churned customers 346 of them have recently renewed the contract\n",
    "# And 137 of the churned customers didnot renewed their contract recently\n",
    "s=non_churned.conrenew_flag.value_counts(normalize=True)\n",
    "s"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "67594015",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(s,labels=['Renewed the contract','Not renewed the contract'],autopct='%1.2f%%');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "20245052",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    2664\n",
       "0     186\n",
       "Name: conrenew_flag, dtype: int64"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 93 percentage of the non-churned customers did renewed their contract recently\n",
    "# 6 percentage of the non-churned customers didnot renewed their contract recently\n",
    "non_churned.conrenew_flag.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "4504b44d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,5))\n",
    "sns.countplot(data=non_churned,x='conrenew_flag');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "02872e3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For Non-churned customers 2664 of them have recently renewed the contract\n",
    "# And 186 of the churned customers didnot renewed their contract recently\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "1729749a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.834369\n",
       "1    0.165631\n",
       "Name: dataplan_flag, dtype: float64"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=churned.dataplan_flag.value_counts(normalize=True)\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "a221946a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(a,labels=['Didnot have a Data plan',' Have a Data plan'],autopct='%1.2f%%');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "6df45365",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 16 percentage of the churned customers  have a Data plan\n",
    "# 83 percentage of the churned customers didnot have a Data plan\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "7bda6604",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>All</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>False</th>\n",
       "      <td>83</td>\n",
       "      <td>112</td>\n",
       "      <td>62</td>\n",
       "      <td>38</td>\n",
       "      <td>21</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>True</th>\n",
       "      <td>614</td>\n",
       "      <td>1069</td>\n",
       "      <td>697</td>\n",
       "      <td>391</td>\n",
       "      <td>145</td>\n",
       "      <td>60</td>\n",
       "      <td>22</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>All</th>\n",
       "      <td>697</td>\n",
       "      <td>1181</td>\n",
       "      <td>759</td>\n",
       "      <td>429</td>\n",
       "      <td>166</td>\n",
       "      <td>66</td>\n",
       "      <td>22</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "num_cs_calls     0     1    2    3    4   5   6  7  8  9   All\n",
       "conrenew_flag                                                 \n",
       "False           83   112   62   38   21   6   0  0  0  1   323\n",
       "True           614  1069  697  391  145  60  22  9  2  1  3010\n",
       "All            697  1181  759  429  166  66  22  9  2  2  3333"
      ]
     },
     "execution_count": 209,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(DF['conrenew_flag']==1,DF['num_cs_calls'],margins=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "ce9b8762",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    403\n",
       "1     80\n",
       "Name: dataplan_flag, dtype: int64"
      ]
     },
     "execution_count": 210,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.dataplan_flag.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "a01c3165",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(5,5))\n",
    "sns.countplot(data=churned,x='dataplan_flag');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "4a8c1c5a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# And 80 of the churned customers have a Data plan\n",
    "# For churned customers 403 of them didnot have a Data plan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "5e46b089",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    0.704561\n",
       "1    0.295439\n",
       "Name: dataplan_flag, dtype: float64"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f=non_churned.dataplan_flag.value_counts(normalize=True)\n",
    "f"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "18bf5e9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(f,labels=['Didnot Have Data plan','Have a Data plan'],autopct='%1.2f%%');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "2f4123b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 29 percentage of the non-churned customers have a Data plan\n",
    "# 70 percentage of the non-churned customers didnot have a Data plan\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "cd98c2ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2008\n",
       "1     842\n",
       "Name: dataplan_flag, dtype: int64"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned.dataplan_flag.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "8e4dbef2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For non-churned customers 842 of them have a Data plan\n",
    "# And 2008 of the non-churned customers didnot have a Data plan\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "34716c25",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.29</td>\n",
       "      <td>4</td>\n",
       "      <td>129.1</td>\n",
       "      <td>137</td>\n",
       "      <td>44.9</td>\n",
       "      <td>11.43</td>\n",
       "      <td>12.7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>161</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4</td>\n",
       "      <td>332.9</td>\n",
       "      <td>67</td>\n",
       "      <td>84.0</td>\n",
       "      <td>15.89</td>\n",
       "      <td>5.4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>77</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>5</td>\n",
       "      <td>62.4</td>\n",
       "      <td>89</td>\n",
       "      <td>26.0</td>\n",
       "      <td>8.50</td>\n",
       "      <td>5.7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>249.6</td>\n",
       "      <td>118</td>\n",
       "      <td>64.0</td>\n",
       "      <td>12.62</td>\n",
       "      <td>11.8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.94</td>\n",
       "      <td>0</td>\n",
       "      <td>173.1</td>\n",
       "      <td>85</td>\n",
       "      <td>86.4</td>\n",
       "      <td>10.20</td>\n",
       "      <td>14.6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "10            65              1              0        0.29             4   \n",
       "15           161              1              0        0.00             4   \n",
       "21            77              1              0        0.00             5   \n",
       "33            12              1              0        0.00             1   \n",
       "41           135              0              1        3.94             0   \n",
       "\n",
       "    avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \n",
       "10          129.1        137      44.9       11.43       12.7           1  \n",
       "15          332.9         67      84.0       15.89        5.4           1  \n",
       "21           62.4         89      26.0        8.50        5.7           1  \n",
       "33          249.6        118      64.0       12.62       11.8           1  \n",
       "41          173.1         85      86.4       10.20       14.6           1  "
      ]
     },
     "execution_count": 218,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "c63aa154",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='weeks_active');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "66687ce3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Maximum Churned customers are being active upto 100-120 weeks\n",
    "sns.countplot(data=churned,x='conrenew_flag');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "6b6dc3d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='dataplan_flag', ylabel='count'>"
      ]
     },
     "execution_count": 222,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data=churned,x='dataplan_flag')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "id": "291893ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='data_usage',bins=5);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "id": "852843d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of churned customers did not use any amount of Data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "id": "87fd07b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=churned,x='num_cs_calls',bins=5);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "2b7dfd22",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of churned customers did not made any single call\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "c19f17b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.252588\n",
       "0    0.190476\n",
       "2    0.180124\n",
       "4    0.157350\n",
       "3    0.091097\n",
       "5    0.082816\n",
       "6    0.028986\n",
       "7    0.010352\n",
       "9    0.004141\n",
       "8    0.002070\n",
       "Name: num_cs_calls, dtype: float64"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned.num_cs_calls.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "9bbeb27e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=non_churned,x='num_cs_calls',bins=5);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "id": "7ac0e703",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    0.371579\n",
       "2    0.235789\n",
       "0    0.212281\n",
       "3    0.135088\n",
       "4    0.031579\n",
       "5    0.009123\n",
       "6    0.002807\n",
       "7    0.001404\n",
       "8    0.000351\n",
       "Name: num_cs_calls, dtype: float64"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned.num_cs_calls.value_counts(normalize=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c14aa675",
   "metadata": {},
   "source": [
    "# QUESTION 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "id": "8cfb3cb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>total_bill</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>128</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.7</td>\n",
       "      <td>1</td>\n",
       "      <td>265.1</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>98.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>107</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.7</td>\n",
       "      <td>1</td>\n",
       "      <td>161.6</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>91.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>137</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "      <td>58.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2</td>\n",
       "      <td>299.4</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.10</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0</td>\n",
       "      <td>60.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>75</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>166.7</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "      <td>7.42</td>\n",
       "      <td>10.1</td>\n",
       "      <td>0</td>\n",
       "      <td>48.42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "0           128              1              1         2.7             1   \n",
       "1           107              1              1         3.7             1   \n",
       "2           137              1              0         0.0             0   \n",
       "3            84              0              0         0.0             2   \n",
       "4            75              0              0         0.0             3   \n",
       "\n",
       "   avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \\\n",
       "0          265.1        110      89.0        9.87       10.0           0   \n",
       "1          161.6        123      82.0        9.78       13.7           0   \n",
       "2          243.4        114      52.0        6.06       12.2           0   \n",
       "3          299.4         71      57.0        3.10        6.6           0   \n",
       "4          166.7        113      41.0        7.42       10.1           0   \n",
       "\n",
       "   total_bill  \n",
       "0       98.87  \n",
       "1       91.78  \n",
       "2       58.06  \n",
       "3       60.10  \n",
       "4       48.42  "
      ]
     },
     "execution_count": 230,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DF.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "46b619b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>total_bill</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>128</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.70</td>\n",
       "      <td>1</td>\n",
       "      <td>265.1</td>\n",
       "      <td>110</td>\n",
       "      <td>89.0</td>\n",
       "      <td>9.87</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>98.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>107</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3.70</td>\n",
       "      <td>1</td>\n",
       "      <td>161.6</td>\n",
       "      <td>123</td>\n",
       "      <td>82.0</td>\n",
       "      <td>9.78</td>\n",
       "      <td>13.7</td>\n",
       "      <td>0</td>\n",
       "      <td>91.78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>137</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>243.4</td>\n",
       "      <td>114</td>\n",
       "      <td>52.0</td>\n",
       "      <td>6.06</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0</td>\n",
       "      <td>58.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>121</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2.03</td>\n",
       "      <td>3</td>\n",
       "      <td>218.2</td>\n",
       "      <td>88</td>\n",
       "      <td>87.3</td>\n",
       "      <td>17.43</td>\n",
       "      <td>7.5</td>\n",
       "      <td>0</td>\n",
       "      <td>104.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>117</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.19</td>\n",
       "      <td>1</td>\n",
       "      <td>184.5</td>\n",
       "      <td>97</td>\n",
       "      <td>63.9</td>\n",
       "      <td>17.58</td>\n",
       "      <td>8.7</td>\n",
       "      <td>0</td>\n",
       "      <td>81.48</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "0           128              1              1        2.70             1   \n",
       "1           107              1              1        3.70             1   \n",
       "2           137              1              0        0.00             0   \n",
       "6           121              1              1        2.03             3   \n",
       "8           117              1              0        0.19             1   \n",
       "\n",
       "   avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \\\n",
       "0          265.1        110      89.0        9.87       10.0           0   \n",
       "1          161.6        123      82.0        9.78       13.7           0   \n",
       "2          243.4        114      52.0        6.06       12.2           0   \n",
       "6          218.2         88      87.3       17.43        7.5           0   \n",
       "8          184.5         97      63.9       17.58        8.7           0   \n",
       "\n",
       "   total_bill  \n",
       "0       98.87  \n",
       "1       91.78  \n",
       "2       58.06  \n",
       "6      104.73  \n",
       "8       81.48  "
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con_ren=DF[DF.conrenew_flag==1]\n",
    "con_ren.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "id": "e509abdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>weeks_active</th>\n",
       "      <th>conrenew_flag</th>\n",
       "      <th>dataplan_flag</th>\n",
       "      <th>data_usage</th>\n",
       "      <th>num_cs_calls</th>\n",
       "      <th>avg_talk_time</th>\n",
       "      <th>avg_calls</th>\n",
       "      <th>mth_bill</th>\n",
       "      <th>overagefee</th>\n",
       "      <th>roam_mins</th>\n",
       "      <th>churn_flag</th>\n",
       "      <th>total_bill</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2</td>\n",
       "      <td>299.4</td>\n",
       "      <td>71</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.10</td>\n",
       "      <td>6.6</td>\n",
       "      <td>0</td>\n",
       "      <td>60.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>75</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3</td>\n",
       "      <td>166.7</td>\n",
       "      <td>113</td>\n",
       "      <td>41.0</td>\n",
       "      <td>7.42</td>\n",
       "      <td>10.1</td>\n",
       "      <td>0</td>\n",
       "      <td>48.42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>118</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>223.4</td>\n",
       "      <td>98</td>\n",
       "      <td>57.0</td>\n",
       "      <td>11.03</td>\n",
       "      <td>6.3</td>\n",
       "      <td>0</td>\n",
       "      <td>68.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>147</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>157.0</td>\n",
       "      <td>79</td>\n",
       "      <td>36.0</td>\n",
       "      <td>5.16</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0</td>\n",
       "      <td>41.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>141</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3.02</td>\n",
       "      <td>0</td>\n",
       "      <td>258.6</td>\n",
       "      <td>84</td>\n",
       "      <td>93.2</td>\n",
       "      <td>11.10</td>\n",
       "      <td>11.2</td>\n",
       "      <td>0</td>\n",
       "      <td>104.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   weeks_active  conrenew_flag  dataplan_flag  data_usage  num_cs_calls  \\\n",
       "3            84              0              0        0.00             2   \n",
       "4            75              0              0        0.00             3   \n",
       "5           118              0              0        0.00             0   \n",
       "7           147              0              0        0.00             0   \n",
       "9           141              0              1        3.02             0   \n",
       "\n",
       "   avg_talk_time  avg_calls  mth_bill  overagefee  roam_mins  churn_flag  \\\n",
       "3          299.4         71      57.0        3.10        6.6           0   \n",
       "4          166.7        113      41.0        7.42       10.1           0   \n",
       "5          223.4         98      57.0       11.03        6.3           0   \n",
       "7          157.0         79      36.0        5.16        7.1           0   \n",
       "9          258.6         84      93.2       11.10       11.2           0   \n",
       "\n",
       "   total_bill  \n",
       "3       60.10  \n",
       "4       48.42  \n",
       "5       68.03  \n",
       "7       41.16  \n",
       "9      104.30  "
      ]
     },
     "execution_count": 232,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_con_ren=DF[DF.conrenew_flag==0]\n",
    "non_con_ren.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "id": "7ff25787",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>weeks_active</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.742193</td>\n",
       "      <td>39.968207</td>\n",
       "      <td>1.00</td>\n",
       "      <td>73.0000</td>\n",
       "      <td>100.00</td>\n",
       "      <td>127.0000</td>\n",
       "      <td>243.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.275748</td>\n",
       "      <td>0.446964</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.808462</td>\n",
       "      <td>1.261818</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.7600</td>\n",
       "      <td>4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>1.573422</td>\n",
       "      <td>1.312855</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>9.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>178.893887</td>\n",
       "      <td>54.141286</td>\n",
       "      <td>0.00</td>\n",
       "      <td>143.3000</td>\n",
       "      <td>179.00</td>\n",
       "      <td>214.9000</td>\n",
       "      <td>350.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>100.410963</td>\n",
       "      <td>19.964447</td>\n",
       "      <td>0.00</td>\n",
       "      <td>87.2500</td>\n",
       "      <td>101.00</td>\n",
       "      <td>114.0000</td>\n",
       "      <td>165.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>56.050731</td>\n",
       "      <td>16.285239</td>\n",
       "      <td>14.00</td>\n",
       "      <td>44.9250</td>\n",
       "      <td>53.00</td>\n",
       "      <td>66.0000</td>\n",
       "      <td>111.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>10.035621</td>\n",
       "      <td>2.523754</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.3025</td>\n",
       "      <td>10.07</td>\n",
       "      <td>11.7600</td>\n",
       "      <td>18.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>10.195349</td>\n",
       "      <td>2.798937</td>\n",
       "      <td>0.00</td>\n",
       "      <td>8.4000</td>\n",
       "      <td>10.20</td>\n",
       "      <td>12.1000</td>\n",
       "      <td>18.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>0.114950</td>\n",
       "      <td>0.319015</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_bill</th>\n",
       "      <td>3010.0</td>\n",
       "      <td>66.086352</td>\n",
       "      <td>17.173249</td>\n",
       "      <td>19.38</td>\n",
       "      <td>53.8525</td>\n",
       "      <td>63.68</td>\n",
       "      <td>76.7475</td>\n",
       "      <td>123.63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                count        mean        std    min       25%     50%  \\\n",
       "weeks_active   3010.0  100.742193  39.968207   1.00   73.0000  100.00   \n",
       "conrenew_flag  3010.0    1.000000   0.000000   1.00    1.0000    1.00   \n",
       "dataplan_flag  3010.0    0.275748   0.446964   0.00    0.0000    0.00   \n",
       "data_usage     3010.0    0.808462   1.261818   0.00    0.0000    0.00   \n",
       "num_cs_calls   3010.0    1.573422   1.312855   0.00    1.0000    1.00   \n",
       "avg_talk_time  3010.0  178.893887  54.141286   0.00  143.3000  179.00   \n",
       "avg_calls      3010.0  100.410963  19.964447   0.00   87.2500  101.00   \n",
       "mth_bill       3010.0   56.050731  16.285239  14.00   44.9250   53.00   \n",
       "overagefee     3010.0   10.035621   2.523754   0.00    8.3025   10.07   \n",
       "roam_mins      3010.0   10.195349   2.798937   0.00    8.4000   10.20   \n",
       "churn_flag     3010.0    0.114950   0.319015   0.00    0.0000    0.00   \n",
       "total_bill     3010.0   66.086352  17.173249  19.38   53.8525   63.68   \n",
       "\n",
       "                    75%     max  \n",
       "weeks_active   127.0000  243.00  \n",
       "conrenew_flag    1.0000    1.00  \n",
       "dataplan_flag    1.0000    1.00  \n",
       "data_usage       1.7600    4.75  \n",
       "num_cs_calls     2.0000    9.00  \n",
       "avg_talk_time  214.9000  350.80  \n",
       "avg_calls      114.0000  165.00  \n",
       "mth_bill        66.0000  111.30  \n",
       "overagefee      11.7600   18.09  \n",
       "roam_mins       12.1000   18.90  \n",
       "churn_flag       0.0000    1.00  \n",
       "total_bill      76.7475  123.63  "
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "con_ren.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "2016c839",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>weeks_active</th>\n",
       "      <td>323.0</td>\n",
       "      <td>104.071207</td>\n",
       "      <td>38.363388</td>\n",
       "      <td>2.00</td>\n",
       "      <td>79.500</td>\n",
       "      <td>104.00</td>\n",
       "      <td>132.500</td>\n",
       "      <td>224.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>conrenew_flag</th>\n",
       "      <td>323.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dataplan_flag</th>\n",
       "      <td>323.0</td>\n",
       "      <td>0.284830</td>\n",
       "      <td>0.452034</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_usage</th>\n",
       "      <td>323.0</td>\n",
       "      <td>0.891146</td>\n",
       "      <td>1.369482</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.175</td>\n",
       "      <td>5.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>num_cs_calls</th>\n",
       "      <td>323.0</td>\n",
       "      <td>1.464396</td>\n",
       "      <td>1.337863</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.000</td>\n",
       "      <td>9.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_talk_time</th>\n",
       "      <td>323.0</td>\n",
       "      <td>187.986997</td>\n",
       "      <td>56.850451</td>\n",
       "      <td>12.50</td>\n",
       "      <td>148.200</td>\n",
       "      <td>188.90</td>\n",
       "      <td>228.650</td>\n",
       "      <td>346.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>avg_calls</th>\n",
       "      <td>323.0</td>\n",
       "      <td>100.665635</td>\n",
       "      <td>21.050065</td>\n",
       "      <td>42.00</td>\n",
       "      <td>85.500</td>\n",
       "      <td>103.00</td>\n",
       "      <td>117.000</td>\n",
       "      <td>146.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mth_bill</th>\n",
       "      <td>323.0</td>\n",
       "      <td>58.676161</td>\n",
       "      <td>17.534118</td>\n",
       "      <td>24.00</td>\n",
       "      <td>45.800</td>\n",
       "      <td>56.00</td>\n",
       "      <td>69.750</td>\n",
       "      <td>110.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>overagefee</th>\n",
       "      <td>323.0</td>\n",
       "      <td>10.199350</td>\n",
       "      <td>2.644023</td>\n",
       "      <td>3.04</td>\n",
       "      <td>8.390</td>\n",
       "      <td>10.15</td>\n",
       "      <td>11.970</td>\n",
       "      <td>18.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>roam_mins</th>\n",
       "      <td>323.0</td>\n",
       "      <td>10.628173</td>\n",
       "      <td>2.697787</td>\n",
       "      <td>1.30</td>\n",
       "      <td>9.000</td>\n",
       "      <td>10.80</td>\n",
       "      <td>12.200</td>\n",
       "      <td>20.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn_flag</th>\n",
       "      <td>323.0</td>\n",
       "      <td>0.424149</td>\n",
       "      <td>0.494980</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_bill</th>\n",
       "      <td>323.0</td>\n",
       "      <td>68.875511</td>\n",
       "      <td>18.396097</td>\n",
       "      <td>30.34</td>\n",
       "      <td>55.035</td>\n",
       "      <td>67.10</td>\n",
       "      <td>80.865</td>\n",
       "      <td>122.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count        mean        std    min      25%     50%      75%  \\\n",
       "weeks_active   323.0  104.071207  38.363388   2.00   79.500  104.00  132.500   \n",
       "conrenew_flag  323.0    0.000000   0.000000   0.00    0.000    0.00    0.000   \n",
       "dataplan_flag  323.0    0.284830   0.452034   0.00    0.000    0.00    1.000   \n",
       "data_usage     323.0    0.891146   1.369482   0.00    0.000    0.00    2.175   \n",
       "num_cs_calls   323.0    1.464396   1.337863   0.00    0.000    1.00    2.000   \n",
       "avg_talk_time  323.0  187.986997  56.850451  12.50  148.200  188.90  228.650   \n",
       "avg_calls      323.0  100.665635  21.050065  42.00   85.500  103.00  117.000   \n",
       "mth_bill       323.0   58.676161  17.534118  24.00   45.800   56.00   69.750   \n",
       "overagefee     323.0   10.199350   2.644023   3.04    8.390   10.15   11.970   \n",
       "roam_mins      323.0   10.628173   2.697787   1.30    9.000   10.80   12.200   \n",
       "churn_flag     323.0    0.424149   0.494980   0.00    0.000    0.00    1.000   \n",
       "total_bill     323.0   68.875511  18.396097  30.34   55.035   67.10   80.865   \n",
       "\n",
       "                  max  \n",
       "weeks_active   224.00  \n",
       "conrenew_flag    0.00  \n",
       "dataplan_flag    1.00  \n",
       "data_usage       5.40  \n",
       "num_cs_calls     9.00  \n",
       "avg_talk_time  346.80  \n",
       "avg_calls      146.00  \n",
       "mth_bill       110.00  \n",
       "overagefee      18.19  \n",
       "roam_mins       20.00  \n",
       "churn_flag       1.00  \n",
       "total_bill     122.75  "
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_con_ren.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "id": "0f7d3067",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(con_ren['weeks_active']);\n",
    "plt.xlabel('weeks active')\n",
    "plt.ylabel('count')\n",
    "plt.title('Weeks active of Contract renewed');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "id": "f3a59ff6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(non_con_ren['weeks_active']);\n",
    "plt.xlabel('weeks active')\n",
    "plt.ylabel('count')\n",
    "plt.title('Weeks active of Non-Contract renewed');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "id": "7c77b401",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of customers who didnot renewed their contract are identified to be active around 105 weeks\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 241,
   "id": "ca385b5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(con_ren['avg_talk_time']);\n",
    "plt.xlabel('avg talk time')\n",
    "plt.ylabel('count')\n",
    "plt.title('Average talktime of Contract renewed');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 242,
   "id": "a765124b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average talk time of the maximum number of people who renewed their contract is in between 150-200 minutes,i.e,178\n",
    " \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "id": "1491e640",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(non_con_ren['avg_talk_time']);\n",
    "plt.xlabel('avg talk time')\n",
    "plt.ylabel('count')\n",
    "plt.title('Average talktime of Non Contract renewed');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 245,
   "id": "4d0d6e50",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average talk time of the maximum number of people who didnot renewed their contract is in between 160-190 minutes,i.e,187\n",
    " \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "id": "caa78df2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(con_ren['avg_calls']);\n",
    "plt.xlabel('avg calls')\n",
    "plt.ylabel('count')\n",
    "plt.title('Average calls of Contract renewed');\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 248,
   "id": "773dc80a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average number of calls of the maximum number of people who renewed their contract is around 100\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 250,
   "id": "e524bc80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(non_con_ren['avg_calls']);\n",
    "plt.xlabel('avg calls')\n",
    "plt.ylabel('count')\n",
    "plt.title('Average calls of Non-Contract renewed');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 251,
   "id": "fbd6ced8",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Average number of calls of the maximum number of people who didnot renewed their contract is also around 100\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "id": "73eb2f10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(con_ren['mth_bill']);\n",
    "plt.xlabel('Monthly bill')\n",
    "plt.ylabel('count')\n",
    "plt.title('Monthly bill of Contract renewed');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "id": "e8e95fba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(non_con_ren['mth_bill']);\n",
    "plt.xlabel('Monthly bill')\n",
    "plt.ylabel('count')\n",
    "plt.title('Monthly bill of Non-Contract renewed');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "id": "ae16bd4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Monthly bill of maximum number of customers who didnot renewed their contract is around 60\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "id": "671892e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.countplot(data=con_ren,x='num_cs_calls');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "id": "a32e602d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of people who renewed their contract has only made one customer service call\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "id": "58d1874e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,5))\n",
    "sns.countplot(data=non_con_ren,x='num_cs_calls');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "id": "7cf08a1a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Maximum number of people who didnot renewed their contract has also made only one customer service call\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "id": "fd76e98e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=con_ren,x='weeks_active');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "id": "3c20cc6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(data=non_con_ren,x='weeks_active');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aa34cec9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
